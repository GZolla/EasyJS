{"opts":{"_":["base","addOns","addOns/displays","addOns/testing"],"configure":"jsdoc.json","template":"C:\\Users\\gianf\\github\\EasyJS\\doc-templates\\easydoc","destination":"./docs","encoding":"utf8","readme":"<h1>EasyJS</h1>\n<p>A javascript library meant to ease the JS development</p>"},"modules":[{"___id":"T000002R000002","___s":true,"comment":"/**\r\n * HTML element builders\r\n * @module Build\r\n */","description":"<p>HTML element builders</p>","kind":"module","longname":"module:Build","meta":{"filename":"build.js","lineno":5,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"Build","members":{"typedef":[{"___id":"T000002R000003","___s":true,"comment":"/**\r\n * @typedef {( \"button\" | \"checkbox\" | \"color\" | \"date\" | \"datetime-local\" | \"email\" | \"file\" | \"hidden\" | \"image\" | \"month\" | \"number\" | \"password\" | \"radio\" | \"range\" | \"reset\" | \"search\" | \"submit\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"week\" )} InputType\r\n */","kind":"typedef","longname":"module:Build~InputType","memberof":"module:Build","meta":{"filename":"build.js","lineno":13,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"InputType","type":["\"button\"","\"checkbox\"","\"color\"","\"date\"","\"datetime-local\"","\"email\"","\"file\"","\"hidden\"","\"image\"","\"month\"","\"number\"","\"password\"","\"radio\"","\"range\"","\"reset\"","\"search\"","\"submit\"","\"tel\"","\"text\"","\"time\"","\"url\"","\"week\""]},{"___id":"T000002R000004","___s":true,"comment":"/**\r\n * @typedef {\"animationcancel\" | \"animationend\" | \"animationiteration\" | \"animationstart\" | \"transitioncancel\" | \"transitionend\" | \"transitionrun\" | \"transitionstart\"} AnimationEventName\r\n */","kind":"typedef","longname":"module:Build~AnimationEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":17,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"AnimationEventName","type":["\"animationcancel\"","\"animationend\"","\"animationiteration\"","\"animationstart\"","\"transitioncancel\"","\"transitionend\"","\"transitionrun\"","\"transitionstart\""]},{"___id":"T000002R000005","___s":true,"comment":"/**\r\n * @typedef {\"click\" | \"dblclick\" | \"mousedown\" | \"mouseenter\" | \"mouseleave\" | \"mousemove\" | \"mouseout\" | \"mouseover\" | \"mouseup\" | \"wheel\"  | \"contextmenu\" | \"auxclick\"  | \"selectionchange\" | \"selectstart\"} MouseEventName\r\n */","kind":"typedef","longname":"module:Build~MouseEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":21,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"MouseEventName","type":["\"click\"","\"dblclick\"","\"mousedown\"","\"mouseenter\"","\"mouseleave\"","\"mousemove\"","\"mouseout\"","\"mouseover\"","\"mouseup\"","\"wheel\"","\"contextmenu\"","\"auxclick\"","\"selectionchange\"","\"selectstart\""]},{"___id":"T000002R000006","___s":true,"comment":"/**\r\n * @typedef {\"pointercancel\" | \"pointerdown\" | \"pointerenter\" | \"pointerleave\" | \"pointermove\" | \"pointerout\" | \"pointerover\" | \"pointerup\" | \"gotpointercapture\" | \"lostpointercapture\"} PointerEventName\r\n */","kind":"typedef","longname":"module:Build~PointerEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":25,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"PointerEventName","type":["\"pointercancel\"","\"pointerdown\"","\"pointerenter\"","\"pointerleave\"","\"pointermove\"","\"pointerout\"","\"pointerover\"","\"pointerup\"","\"gotpointercapture\"","\"lostpointercapture\""]},{"___id":"T000002R000007","___s":true,"comment":"/**\r\n * @typedef {\"drag\" | \"dragend\" | \"dragenter\" | \"dragexit\" | \"dragleave\" | \"dragover\" | \"dragstart\" | \"drop\" | \"scroll\"} DragEventName\r\n */","kind":"typedef","longname":"module:Build~DragEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":29,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"DragEventName","type":["\"drag\"","\"dragend\"","\"dragenter\"","\"dragexit\"","\"dragleave\"","\"dragover\"","\"dragstart\"","\"drop\"","\"scroll\""]},{"___id":"T000002R000008","___s":true,"comment":"/**\r\n * @typedef {\"copy\" | \"cut\" | \"paste\"} ClipdboardEventName\r\n */","kind":"typedef","longname":"module:Build~ClipdboardEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":33,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"ClipdboardEventName","type":["\"copy\"","\"cut\"","\"paste\""]},{"___id":"T000002R000009","___s":true,"comment":"/**\r\n * @typedef {\"keydown\" | \"keypress\" | \"keyup\"} KeyboardEventName\r\n */","kind":"typedef","longname":"module:Build~KeyboardEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":37,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"KeyboardEventName","type":["\"keydown\"","\"keypress\"","\"keyup\""]},{"___id":"T000002R000010","___s":true,"comment":"/**\r\n * @typedef {\"blur\" | \"change\" | \"focus\" | \"input\" | \"invalid\" | \"reset\" | \"search\" | \"select\" | \"submit\"  | \"focusin\" | \"focusout\"} FormEventName\r\n */","kind":"typedef","longname":"module:Build~FormEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":41,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"FormEventName","type":["\"blur\"","\"change\"","\"focus\"","\"input\"","\"invalid\"","\"reset\"","\"search\"","\"select\"","\"submit\"","\"focusin\"","\"focusout\""]},{"___id":"T000002R000011","___s":true,"comment":"/**\r\n * @typedef {\"touchcancel\" | \"touchend\" | \"touchmove\" | \"touchstart\"} TouchEventName\r\n */","kind":"typedef","longname":"module:Build~TouchEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":44,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"TouchEventName","type":["\"touchcancel\"","\"touchend\"","\"touchmove\"","\"touchstart\""]},{"___id":"T000002R000012","___s":true,"comment":"/**\r\n * @typedef {\"canplay\" | \"canplaythrough\" | \"cuechange\" | \"durationchange\" | \"emptied\" | \"ended\" | \"loadeddata\" | \"loadedmetadata\" | \"loadstart\" | \"pause\" | \"play\" | \"playing\" | \"progress\" | \"ratechange\" | \"seeked\" | \"seeking\" | \"stalled\" | \"suspend\" | \"timeupdate\" | \"volumechange\" | \"waiting\"} MediaEventName\r\n */","kind":"typedef","longname":"module:Build~MediaEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":47,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"MediaEventName","type":["\"canplay\"","\"canplaythrough\"","\"cuechange\"","\"durationchange\"","\"emptied\"","\"ended\"","\"loadeddata\"","\"loadedmetadata\"","\"loadstart\"","\"pause\"","\"play\"","\"playing\"","\"progress\"","\"ratechange\"","\"seeked\"","\"seeking\"","\"stalled\"","\"suspend\"","\"timeupdate\"","\"volumechange\"","\"waiting\""]},{"___id":"T000002R000013","___s":true,"comment":"/**\r\n * @typedef {\"abort\" | \"load\" | \"error\" | \"loadend\"} XMLHTTPEventName\r\n */","kind":"typedef","longname":"module:Build~XMLHTTPEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":50,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"XMLHTTPEventName","type":["\"abort\"","\"load\"","\"error\"","\"loadend\""]},{"___id":"T000002R000014","___s":true,"comment":"/**\r\n * @typedef {\"cancel\" | \"close\" | \"toggle\"} DialogEventName\r\n */","kind":"typedef","longname":"module:Build~DialogEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":53,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"DialogEventName","type":["\"cancel\"","\"close\"","\"toggle\""]},{"___id":"T000002R000015","___s":true,"comment":"/**\r\n * @typedef {\"resize\" | \"fullscreenchange\" | \"fullscreenerror\"} WindowEventName\r\n */","kind":"typedef","longname":"module:Build~WindowEventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":56,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"WindowEventName","type":["\"resize\"","\"fullscreenchange\"","\"fullscreenerror\""]},{"___id":"T000002R000016","___s":true,"comment":"/**\r\n * @typedef {AnimationEventName | MouseEventName |PointerEventName |ClipdboardEventName | KeyboardEventName | FormEventName | TouchEventName | MediaEventName | XMLHTTPEventName | DialogEventName | WindowEventName} EventName\r\n */","kind":"typedef","longname":"module:Build~EventName","memberof":"module:Build","meta":{"filename":"build.js","lineno":61,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"EventName","type":["AnimationEventName","MouseEventName","PointerEventName","ClipdboardEventName","KeyboardEventName","FormEventName","TouchEventName","MediaEventName","XMLHTTPEventName","DialogEventName","WindowEventName"]},{"___id":"T000002R000017","___s":true,"comment":"/**\r\n * Event handling callback\r\n * @callback eventCallback\r\n * @param {HTMLElement} this\r\n * @param {Event} ev\r\n */","description":"<p>Event handling callback</p>","kind":"typedef","longname":"module:Build~eventCallback","memberof":"module:Build","meta":{"filename":"build.js","lineno":69,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"eventCallback","params":[{"type":["HTMLElement"],"name":"this"},{"type":["Event"],"name":"ev"}],"type":["function"]},{"___id":"T000002R000018","___s":true,"comment":"/**\r\n * Event handling function and event name\r\n * @typedef {Object} EventHandler\r\n * @property {EventName} event\r\n * @property {eventCallback} handler\r\n */","description":"<p>Event handling function and event name</p>","kind":"typedef","longname":"module:Build~EventHandler","memberof":"module:Build","meta":{"filename":"build.js","lineno":77,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"EventHandler","properties":[{"type":["EventName"],"name":"event"},{"type":["eventCallback"],"name":"handler"}],"type":["Object"]},{"___id":"T000002R000019","___s":true,"comment":"/**\r\n * @typedef {\"base\" | \"head\" | \"link\" | \"meta\" | \"style\" | \"title\"} MetadataTag\r\n */","kind":"typedef","longname":"module:Build~MetadataTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":85,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"MetadataTag","type":["\"base\"","\"head\"","\"link\"","\"meta\"","\"style\"","\"title\""]},{"___id":"T000002R000020","___s":true,"comment":"/**\r\n * @typedef {\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"} HeaderTag\r\n */","kind":"typedef","longname":"module:Build~HeaderTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":88,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"HeaderTag","type":["\"h1\"","\"h2\"","\"h3\"","\"h4\"","\"h5\"","\"h6\""]},{"___id":"T000002R000021","___s":true,"comment":"/**\r\n * @typedef {\"blockquote\" | \"dd\" | \"div\" | \"dl\" | \"dt\" | \"figcaption\" | \"figure\" | \"hr\" | \"li\" | \"menu\" | \"ol\" | \"p\" | \"pre\" | \"ul\"} ContentTag\r\n */","kind":"typedef","longname":"module:Build~ContentTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":91,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"ContentTag","type":["\"blockquote\"","\"dd\"","\"div\"","\"dl\"","\"dt\"","\"figcaption\"","\"figure\"","\"hr\"","\"li\"","\"menu\"","\"ol\"","\"p\"","\"pre\"","\"ul\""]},{"___id":"T000002R000022","___s":true,"comment":"/**\r\n * @typedef {\"body\" | \"address\" | \"article\" | \"aside\" | \"footer\" | \"header\" | \"main\" | \"nav\" | \"section\"} SectioningTag\r\n */","kind":"typedef","longname":"module:Build~SectioningTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":94,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"SectioningTag","type":["\"body\"","\"address\"","\"article\"","\"aside\"","\"footer\"","\"header\"","\"main\"","\"nav\"","\"section\""]},{"___id":"T000002R000023","___s":true,"comment":"/**\r\n * @typedef {\"a\" | \"abbr\" | \"b\" | \"bdi\" | \"bdo\" | \"br\" | \"cite\" | \"code\" | \"data\" | \"dfn\" | \"em\" | \"i\" | \"kbd\" | \"mark\" | \"q\" | \"rp\" | \"rt\" | \"ruby\" | \"s\" | \"samp\" | \"small\" | \"span\" | \"strong\" | \"sub\" | \"sup\" | \"time\" | \"u\" | \"var\" | \"wbr\"} InlineTag\r\n */","kind":"typedef","longname":"module:Build~InlineTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":97,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"InlineTag","type":["\"a\"","\"abbr\"","\"b\"","\"bdi\"","\"bdo\"","\"br\"","\"cite\"","\"code\"","\"data\"","\"dfn\"","\"em\"","\"i\"","\"kbd\"","\"mark\"","\"q\"","\"rp\"","\"rt\"","\"ruby\"","\"s\"","\"samp\"","\"small\"","\"span\"","\"strong\"","\"sub\"","\"sup\"","\"time\"","\"u\"","\"var\"","\"wbr\""]},{"___id":"T000002R000024","___s":true,"comment":"/**\r\n * @typedef {\"area\" | \"audio\" | \"img\" | \"map\" | \"track\" | \"video\" | \"picture\" | \"source\"} MultiMediaTag\r\n */","kind":"typedef","longname":"module:Build~MultiMediaTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":100,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"MultiMediaTag","type":["\"area\"","\"audio\"","\"img\"","\"map\"","\"track\"","\"video\"","\"picture\"","\"source\""]},{"___id":"T000002R000025","___s":true,"comment":"/**\r\n * @typedef {\"embed\" | \"iframe\" | \"object\" | \"portal\"} EmbeddingTag\r\n */","kind":"typedef","longname":"module:Build~EmbeddingTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":103,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"EmbeddingTag","type":["\"embed\"","\"iframe\"","\"object\"","\"portal\""]},{"___id":"T000002R000026","___s":true,"comment":"/**\r\n * @typedef {\"canvas\" | \"noscript\" | \"script\"} ScriptingTag\r\n */","kind":"typedef","longname":"module:Build~ScriptingTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":107,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"ScriptingTag","type":["\"canvas\"","\"noscript\"","\"script\""]},{"___id":"T000002R000027","___s":true,"comment":"/**\r\n * @typedef {\"del\" | \"ins\"} EditTag\r\n */","kind":"typedef","longname":"module:Build~EditTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":110,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"EditTag","type":["\"del\"","\"ins\""]},{"___id":"T000002R000028","___s":true,"comment":"/**\r\n * @typedef {\"caption\" | \"col\" | \"colgroup\" | \"table\" | \"tbody\" | \"td\" | \"tfoot\" | \"th\" | \"thead\" | \"tr\"} TableTag\r\n */","kind":"typedef","longname":"module:Build~TableTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":113,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"TableTag","type":["\"caption\"","\"col\"","\"colgroup\"","\"table\"","\"tbody\"","\"td\"","\"tfoot\"","\"th\"","\"thead\"","\"tr\""]},{"___id":"T000002R000029","___s":true,"comment":"/**\r\n * @typedef {\"button\" | \"datalist\" | \"fieldset\" | \"form\" | \"input\" | \"label\" | \"legend\" | \"meter\" | \"optgroup\" | \"option\" | \"output\" | \"progress\" | \"select\" | \"textarea\"} FormTag\r\n */","kind":"typedef","longname":"module:Build~FormTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":116,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"FormTag","type":["\"button\"","\"datalist\"","\"fieldset\"","\"form\"","\"input\"","\"label\"","\"legend\"","\"meter\"","\"optgroup\"","\"option\"","\"output\"","\"progress\"","\"select\"","\"textarea\""]},{"___id":"T000002R000030","___s":true,"comment":"/**\r\n * @typedef {\"details\" | \"dialog\" | \"summary\" | \"slot\" | \"template\"} UtilityTag\r\n */","kind":"typedef","longname":"module:Build~UtilityTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":119,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"UtilityTag","type":["\"details\"","\"dialog\"","\"summary\"","\"slot\"","\"template\""]},{"___id":"T000002R000031","___s":true,"comment":"/**\r\n * @typedef {MetadataTag | SectioningTag | HeaderTag | ContentTag | InlineTag | MultiMediaTag | EmbeddingTag | ScriptingTag | EditTag | TableTag | FormTag | UtilityTag} HTMLElementTag\r\n */","kind":"typedef","longname":"module:Build~HTMLElementTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":123,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"HTMLElementTag","type":["MetadataTag","SectioningTag","HeaderTag","ContentTag","InlineTag","MultiMediaTag","EmbeddingTag","ScriptingTag","EditTag","TableTag","FormTag","UtilityTag"]},{"___id":"T000002R000048","___s":true,"comment":"/**\r\n * @typedef {Object} InputOptions\r\n * @property {string} [className]\r\n * @property {DOMOption} [option]\r\n * @property {string} [name]\r\n * @property {string} [value]\r\n * @property {EventHandler} [event]\r\n * @property {EventHandler[]} [events]\r\n */","kind":"typedef","longname":"module:Build~InputOptions","memberof":"module:Build","meta":{"filename":"build.js","lineno":189,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"InputOptions","properties":[{"type":["string"],"optional":true,"name":"className"},{"type":["DOMOption"],"optional":true,"name":"option"},{"type":["string"],"optional":true,"name":"name"},{"type":["string"],"optional":true,"name":"value"},{"type":["EventHandler"],"optional":true,"name":"event"},{"type":["Array.<EventHandler>"],"optional":true,"name":"events"}],"type":["Object"]},{"___id":"T000002R000111","___s":true,"comment":"/**\r\n     * @typedef {\"feBlend\" | \"feColorMatrix\" | \"feComponentTransfer\" | \"feComposite\" | \"feConvolveMatrix\" | \"feDiffuseLighting\" | \"feDisplacementMap\" | \"feDistantLight\" | \"feFlood\" | \"feFuncA\" | \"feFuncB\" | \"feFuncG\" | \"feFuncR\" | \"feGaussianBlur\" | \"feImage\" | \"feMerge\" | \"feMergeNode\" | \"feMorphology\" | \"feOffset\" | \"fePointLight\" | \"feSpecularLighting\" | \"feSpotLight\" | \"feTile\" | \"feTurbulence\"} SVGFilterTag\r\n     */","kind":"typedef","longname":"module:Build~SVGFilterTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":390,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"SVGFilterTag","type":["\"feBlend\"","\"feColorMatrix\"","\"feComponentTransfer\"","\"feComposite\"","\"feConvolveMatrix\"","\"feDiffuseLighting\"","\"feDisplacementMap\"","\"feDistantLight\"","\"feFlood\"","\"feFuncA\"","\"feFuncB\"","\"feFuncG\"","\"feFuncR\"","\"feGaussianBlur\"","\"feImage\"","\"feMerge\"","\"feMergeNode\"","\"feMorphology\"","\"feOffset\"","\"fePointLight\"","\"feSpecularLighting\"","\"feSpotLight\"","\"feTile\"","\"feTurbulence\""]},{"___id":"T000002R000112","___s":true,"comment":"/**\r\n     *  @typedef {\"circle\" | \"ellipse\" | \"path\" | \"polygon\" | \"polyline\" | \"rect\"} SVGShapeTag\r\n     */","kind":"typedef","longname":"module:Build~SVGShapeTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":394,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"SVGShapeTag","type":["\"circle\"","\"ellipse\"","\"path\"","\"polygon\"","\"polyline\"","\"rect\""]},{"___id":"T000002R000113","___s":true,"comment":"/** \r\n     * @typedef {SVGFilterTag | SVGShapeTag | \"a\" | \"clipPath\" | \"defs\" | \"desc\" | \"filter\" | \"foreignObject\" | \"g\" | \"image\" | \"line\" | \"linearGradient\" | \"marker\" | \"mask\" | \"metadata\" | \"pattern\" | \"radialGradient\" | \"script\" | \"stop\" | \"style\" | \"svg\" | \"switch\" | \"symbol\" | \"text\" | \"textPath\" | \"title\" | \"tspan\" | \"use\" | \"view\" } SVGTag \r\n     */","kind":"typedef","longname":"module:Build~SVGTag","memberof":"module:Build","meta":{"filename":"build.js","lineno":399,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"SVGTag","type":["SVGFilterTag","SVGShapeTag","\"a\"","\"clipPath\"","\"defs\"","\"desc\"","\"filter\"","\"foreignObject\"","\"g\"","\"image\"","\"line\"","\"linearGradient\"","\"marker\"","\"mask\"","\"metadata\"","\"pattern\"","\"radialGradient\"","\"script\"","\"stop\"","\"style\"","\"svg\"","\"switch\"","\"symbol\"","\"text\"","\"textPath\"","\"title\"","\"tspan\"","\"use\"","\"view\""]},{"___id":"T000002R000114","___s":true,"comment":"/** @typedef {Object.<string,string | number>} SVGAttributes*/","kind":"typedef","longname":"module:Build~SVGAttributes","memberof":"module:Build","meta":{"filename":"build.js","lineno":403,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"SVGAttributes","type":["Object.<string, (string|number)>"]},{"___id":"T000002R000115","___s":true,"comment":"/**\r\n     * @typedef {Object} SVGDescriptor\r\n     * @property {SVGTag} tag\r\n     * @property {SVGAttributes} attributes\r\n     */","kind":"typedef","longname":"module:Build~SVGDescriptor","memberof":"module:Build","meta":{"filename":"build.js","lineno":405,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"SVGDescriptor","properties":[{"type":["SVGTag"],"name":"tag"},{"type":["SVGAttributes"],"name":"attributes"}],"type":["Object"]}],"function":[{"___id":"T000002R000032","___s":true,"attributes":["static"],"comment":"/**\r\n * Creates an element of the given tag\r\n * @param {HTMLElementTag} tag \r\n * @param {string} className \r\n * @param {DOMOption} [option] \r\n * @return {HTMLElement}\r\n */","description":"<p>Creates an element of the given tag</p>","kind":"function","longname":"module:Build.element","memberof":"module:Build","meta":{"range":[4735,4946],"filename":"build.js","lineno":135,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000008","name":"exports.element","type":"FunctionDeclaration","paramnames":["tag","className","option"]}},"name":"element","params":[{"type":["HTMLElementTag"],"name":"tag"},{"type":["string"],"name":"className"},{"type":["DOMOption"],"optional":true,"name":"option"}],"returns":{"type":["HTMLElement"]}},{"___id":"T000002R000036","___s":true,"attributes":["static"],"comment":"/**\r\n * Creates an img element with given src\r\n * @param {string} src \r\n * @param {string} alt \r\n * @param {string} className \r\n * @param {DOMOption} [option] \r\n * @returns {HTMLImageElement}\r\n */","description":"<p>Creates an img element with given src</p>","kind":"function","longname":"module:Build.img","memberof":"module:Build","meta":{"range":[5377,5571],"filename":"build.js","lineno":154,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000043","name":"exports.img","type":"FunctionDeclaration","paramnames":["src","alt","className","option"]}},"name":"img","params":[{"type":["string"],"name":"src"},{"type":["string"],"name":"alt"},{"type":["string"],"name":"className"},{"type":["DOMOption"],"optional":true,"name":"option"}],"returns":{"type":["HTMLImageElement"]}},{"___id":"T000002R000041","___s":true,"attributes":["static"],"comment":"/**\r\n * Creates an img element with given src\r\n * @param {URL | string} href\r\n * @param {string} className \r\n * @param {DOMOption} [option] \r\n * @return {HTMLAnchorElement}\r\n */","description":"<p>Creates an img element with given src</p>","kind":"function","longname":"module:Build.a","memberof":"module:Build","meta":{"range":[5754,5953],"filename":"build.js","lineno":168,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000075","name":"exports.a","type":"FunctionDeclaration","paramnames":["href","className","option"]}},"name":"a","params":[{"type":["URL","string"],"name":"href"},{"type":["string"],"name":"className"},{"type":["DOMOption"],"optional":true,"name":"option"}],"returns":{"type":["HTMLAnchorElement"]}},{"___id":"T000002R000045","___s":true,"attributes":["static"],"comment":"/**\r\n * Create a text node\r\n * @param {string} text \r\n * @param {DOMOption} [option] \r\n * @return {Text}\r\n */","description":"<p>Create a text node</p>","kind":"function","longname":"module:Build.textNode","memberof":"module:Build","meta":{"range":[6068,6233],"filename":"build.js","lineno":180,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000108","name":"exports.textNode","type":"FunctionDeclaration","paramnames":["text","option"]}},"name":"textNode","params":[{"type":["string"],"name":"text"},{"type":["DOMOption"],"optional":true,"name":"option"}],"returns":{"type":["Text"]}}],"namespace":[{"___id":"T000002R000049","___s":true,"comment":"/**\r\n * Build HTML Inputs\r\n * @namespace Input\r\n */","description":"<p>Build HTML Inputs</p>","kind":"namespace","longname":"module:Build~Input","memberof":"module:Build","meta":{"filename":"build.js","lineno":199,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"Input","members":{"function":[{"___id":"T000002R000052","___s":true,"attributes":["static"],"comment":"/**\r\n     * Build input element\r\n     * @param {InputType} type\r\n     * @param {InputOptions} options \r\n     * @return {HTMLInputElement}\r\n     */","description":"<p>Build input element</p>","kind":"function","longname":"module:Build~Input.custom","memberof":"module:Build~Input","meta":{"range":[6951,7718],"filename":"build.js","lineno":212,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000139","name":"custom","type":"FunctionExpression"},"vars":{"input":"module:Build~Input.custom~input","input.type":"module:Build~Input.custom~input.type","input.value":"module:Build~Input.custom~input.value","input.name":"module:Build~Input.custom~input.name","events":"module:Build~events","i":"module:Build~Input.custom~i","handler":"module:Build~Input.custom~handler"}},"name":"custom","params":[{"type":["InputType"],"name":"type"},{"type":["InputOptions"],"name":"options"}],"returns":{"type":["HTMLInputElement"]}},{"___id":"T000002R000066","___s":true,"attributes":["static"],"comment":"/**\r\n     * Build a text input element\r\n     * @param {(\"text\" | \"email\" | \"password\" | \"search\" | \"url\" | \"tel\")} type\r\n     * @param {InputOptions} options \r\n     * @param {Object} [textOptions = {}]\r\n     * @param {string} [textOptions.placeholder]\r\n     * @param {number} [textOptions.minLength] \r\n     * @param {number} [textOptions.maxLength]\r\n     * @param {string} [textOptions.pattern] Pattern to match in validation\r\n     * @param {boolean} [textOptions.readOnly] Wether the input can be written to\r\n     * @return {HTMLInputElement}\r\n     */","description":"<p>Build a text input element</p>","kind":"function","longname":"module:Build~Input.text","memberof":"module:Build~Input","meta":{"range":[8285,8781],"filename":"build.js","lineno":248,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000253","name":"text","type":"FunctionExpression"},"vars":{"text":"module:Build~Input.text~text","undefined":null,"text.minLength":"module:Build~Input.text~text.minLength","text.maxLength":"module:Build~Input.text~text.maxLength","text.pattern":"module:Build~Input.text~text.pattern","text.readOnly":"module:Build~Input.text~text.readOnly","text.placeholder":"module:Build~Input.text~text.placeholder"}},"name":"text","params":[{"type":["\"text\"","\"email\"","\"password\"","\"search\"","\"url\"","\"tel\""],"name":"type"},{"type":["InputOptions"],"name":"options"},{"type":["Object"],"optional":true,"defaultvalue":"{}","name":"textOptions","properties":[{"type":["string"],"optional":true,"name":"placeholder"},{"type":["number"],"optional":true,"name":"minLength"},{"type":["number"],"optional":true,"name":"maxLength"},{"type":["string"],"optional":true,"description":"<p>Pattern to match in validation</p>","name":"pattern"},{"type":["boolean"],"optional":true,"description":"<p>Wether the input can be written to</p>","name":"readOnly"}]}],"returns":{"type":["HTMLInputElement"]}},{"___id":"T000002R000078","___s":true,"attributes":["static"],"comment":"/**\r\n     * Build color input element\r\n     * @param {InputOptions} options \r\n     * @return {HTMLInputElement}\r\n     */","description":"<p>Build color input element</p>","kind":"function","longname":"module:Build~Input.color","memberof":"module:Build~Input","meta":{"range":[8916,8981],"filename":"build.js","lineno":264,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000338","name":"color","type":"FunctionExpression"}},"name":"color","params":[{"type":["InputOptions"],"name":"options"}],"returns":{"type":["HTMLInputElement"]}},{"___id":"T000002R000079","___s":true,"attributes":["static"],"comment":"/**\r\n     * Build hiddent input element\r\n     * @param {InputOptions} options \r\n     * @return {HTMLInputElement}\r\n     */","description":"<p>Build hiddent input element</p>","kind":"function","longname":"module:Build~Input.hidden","memberof":"module:Build~Input","meta":{"range":[9118,9185],"filename":"build.js","lineno":271,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000351","name":"hidden","type":"FunctionExpression"}},"name":"hidden","params":[{"type":["InputOptions"],"name":"options"}],"returns":{"type":["HTMLInputElement"]}},{"___id":"T000002R000080","___s":true,"attributes":["static"],"comment":"/**\r\n     * Build clickable \r\n     * @param {InputType} type \r\n     * @param {eventCallback} [onClick] \r\n     * @param {InputOptions} [options] \r\n     */","description":"<p>Build clickable</p>","kind":"function","longname":"module:Build~Input.clickable","memberof":"module:Build~Input","meta":{"range":[9355,9858],"filename":"build.js","lineno":280,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000364","name":"clickable","type":"FunctionExpression"},"vars":{"options[\"events\"]":"module:Build~options.\"events\""}},"name":"clickable","params":[{"type":["InputType"],"name":"type"},{"type":["eventCallback"],"optional":true,"name":"onClick"},{"type":["InputOptions"],"optional":true,"name":"options"}]},{"___id":"T000002R000086","___s":true,"attributes":["static"],"comment":"/**\r\n     * Build button input element\r\n     * @param {(\"button\" | \"submit\" | \"reset\" | \"image\")} type\r\n     * @param {string} value If type is image, this will be used for src\r\n     * @param {eventCallback} [onClick] Callback for click event\r\n     * @param {InputOptions} [options] \r\n     * @return {HTMLInputElement}\r\n     */","description":"<p>Build button input element</p>","kind":"function","longname":"module:Build~Input.button","memberof":"module:Build~Input","meta":{"range":[10202,10502],"filename":"build.js","lineno":308,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000413","name":"button","type":"FunctionExpression"},"vars":{"options[\"value\"]":"module:Build~options.\"value\"","input":"module:Build~Input.button~input","input.src":"module:Build~Input.button~input.src"}},"name":"button","params":[{"type":["\"button\"","\"submit\"","\"reset\"","\"image\""],"name":"type"},{"type":["string"],"description":"<p>If type is image, this will be used for src</p>","name":"value"},{"type":["eventCallback"],"optional":true,"description":"<p>Callback for click event</p>","name":"onClick"},{"type":["InputOptions"],"optional":true,"name":"options"}],"returns":{"type":["HTMLInputElement"]}},{"___id":"T000002R000090","___s":true,"attributes":["static"],"comment":"/**\r\n     * Build radio or checkbox\r\n     * @param {(\"radio\" | \"checkbox\")} type \r\n     * @param {boolean} checked \r\n     * @param {eventCallback} [onClick] Callback for click event\r\n     * @param {InputOptions} [options]\r\n     * @return {HTMLInputElement}\r\n     */","description":"<p>Build radio or checkbox</p>","kind":"function","longname":"module:Build~Input.checkable","memberof":"module:Build~Input","meta":{"range":[10782,10964],"filename":"build.js","lineno":327,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000456","name":"checkable","type":"FunctionExpression"},"vars":{"input":"module:Build~Input.checkable~input","input.checked":"module:Build~Input.checkable~input.checked"}},"name":"checkable","params":[{"type":["\"radio\"","\"checkbox\""],"name":"type"},{"type":["boolean"],"name":"checked"},{"type":["eventCallback"],"optional":true,"description":"<p>Callback for click event</p>","name":"onClick"},{"type":["InputOptions"],"optional":true,"name":"options"}],"returns":{"type":["HTMLInputElement"]}},{"___id":"T000002R000093","___s":true,"attributes":["static"],"comment":"/**\r\n     * Build checkbox\r\n     * @param {boolean} checked \r\n     * @param {eventCallback} [onClick] Callback for click event\r\n     * @param {InputOptions} [options]\r\n     * @return {HTMLInputElement}\r\n     */","description":"<p>Build checkbox</p>","kind":"function","longname":"module:Build~Input.checkbox","memberof":"module:Build~Input","meta":{"range":[11189,11296],"filename":"build.js","lineno":340,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000483","name":"checkbox","type":"FunctionExpression"}},"name":"checkbox","params":[{"type":["boolean"],"name":"checked"},{"type":["eventCallback"],"optional":true,"description":"<p>Callback for click event</p>","name":"onClick"},{"type":["InputOptions"],"optional":true,"name":"options"}],"returns":{"type":["HTMLInputElement"]}},{"___id":"T000002R000094","___s":true,"attributes":["static"],"comment":"/**\r\n     * Adds radio options to container\r\n     * @param {HTMLElement} parent\r\n     * @param {string} name\r\n     * @param {string[]} options\r\n     * @param {eventCallback} [onClick] Callback for click event\r\n     * @param {InputOptions} [inputOption] Option and name will be overwritten\r\n     * @param {number} [checkedIndex] \r\n     */","description":"<p>Adds radio options to container</p>","kind":"function","longname":"module:Build~Input.radio","memberof":"module:Build~Input","meta":{"range":[11654,12194],"filename":"build.js","lineno":352,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000498","name":"radio","type":"FunctionExpression"},"vars":{"domOption":"module:Build~Input.radio~domOption","inputOption[\"option\"]":"module:Build~inputOption.\"option\"","inputOption[\"name\"]":"module:Build~inputOption.\"name\"","i":"module:Build~Input.radio~i","inputOption.value":"module:Build~inputOption.value","r":"module:Build~Input.radio~r","label":"module:Build~Input.radio~label","label.innerHTML":"module:Build~Input.radio~label.innerHTML"}},"name":"radio","params":[{"type":["HTMLElement"],"name":"parent"},{"type":["string"],"name":"name"},{"type":["Array.<string>"],"name":"options"},{"type":["eventCallback"],"optional":true,"description":"<p>Callback for click event</p>","name":"onClick"},{"type":["InputOptions"],"optional":true,"description":"<p>Option and name will be overwritten</p>","name":"inputOption"},{"type":["number"],"optional":true,"name":"checkedIndex"}]},{"___id":"T000002R000103","___s":true,"attributes":["static"],"comment":"/**\r\n     * Build number/range input with min, max and step values\r\n     * @param {(\"number\" | \"range\")} type\r\n     * @param {number} [min] \r\n     * @param {number} [max] \r\n     * @param {number} [step] \r\n     * @param {InputOptions} [options] \r\n     * @return {HTMLInputElement}\r\n     */","description":"<p>Build number/range input with min, max and step values</p>","kind":"function","longname":"module:Build~Input.number","memberof":"module:Build~Input","meta":{"range":[12497,12774],"filename":"build.js","lineno":373,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000584","name":"number","type":"FunctionExpression"},"vars":{"input":"module:Build~Input.number~input","input.min":"module:Build~Input.number~input.min","input.max":"module:Build~Input.number~input.max","input.step":"module:Build~Input.number~input.step"}},"name":"number","params":[{"type":["\"number\"","\"range\""],"name":"type"},{"type":["number"],"optional":true,"name":"min"},{"type":["number"],"optional":true,"name":"max"},{"type":["number"],"optional":true,"name":"step"},{"type":["InputOptions"],"optional":true,"name":"options"}],"returns":{"type":["HTMLInputElement"]}}]}},{"___id":"T000002R000108","___s":true,"comment":"/**\r\n * Buld SVG elements\r\n * @namespace Svg\r\n */","description":"<p>Buld SVG elements</p>","kind":"namespace","longname":"module:Build~Svg","memberof":"module:Build","meta":{"filename":"build.js","lineno":385,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"Svg","members":{"function":[{"___id":"T000002R000116","___s":true,"attributes":["static"],"comment":"/**\r\n     * Creates an SVG element of the given tag\r\n     * @param {SVGTag} tag \r\n     * @param {SVGAttributes} [attributes] \r\n     * @param {DOMOption} [option] \r\n     * @returns {SVGElement}\r\n     */","description":"<p>Creates an SVG element of the given tag</p>","kind":"function","longname":"module:Build~Svg.svgElement","memberof":"module:Build~Svg","meta":{"range":[14306,14655],"filename":"build.js","lineno":419,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000649","name":"svgElement","type":"FunctionExpression"},"vars":{"element":"module:Build~Svg.svgElement~element","attribute":"module:Build~Svg.svgElement~attribute"}},"name":"svgElement","params":[{"type":["SVGTag"],"name":"tag"},{"type":["SVGAttributes"],"optional":true,"name":"attributes"},{"type":["DOMOption"],"optional":true,"name":"option"}],"returns":{"type":["SVGElement"]}},{"___id":"T000002R000119","___s":true,"attributes":["static"],"comment":"/**\r\n     * Create an SVG element with the given elements created inside\r\n     * @param {SVGDescriptor[]} elements \r\n     * @param {string} className\r\n     * @param {DOMOption} [option]\r\n     * @param {Object<string,string>} [attributes]\r\n     * @returns {SVGElement}\r\n     */","description":"<p>Create an SVG element with the given elements created inside</p>","kind":"function","longname":"module:Build~Svg.svgIcon","memberof":"module:Build~Svg","meta":{"range":[14950,15293],"filename":"build.js","lineno":437,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000693","name":"svgIcon","type":"FunctionExpression"},"vars":{"svg":"module:Build~Svg.svgIcon~svg","appendToIcon":"module:Build~Svg.svgIcon~appendToIcon","att":"module:Build~Svg.svgIcon~att"}},"name":"svgIcon","params":[{"type":["Array.<SVGDescriptor>"],"name":"elements"},{"type":["string"],"name":"className"},{"type":["DOMOption"],"optional":true,"name":"option"},{"type":["Object.<string, string>"],"optional":true,"name":"attributes"}],"returns":{"type":["SVGElement"]}}]}}]}},{"___id":"T000002R000124","___s":true,"comment":"/**\r\n * CSS helper functions\r\n * @module CSS\r\n */","description":"<p>CSS helper functions</p>","kind":"module","longname":"module:CSS","meta":{"filename":"css.js","lineno":4,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"CSS","members":{"constant":[{"___id":"T000002R000125","___s":true,"comment":"/**\r\n * @type {UnitValue}\r\n */","kind":"constant","longname":"module:CSS~MIN_PADDING","memberof":"module:CSS","meta":{"range":[375,411],"filename":"css.js","lineno":16,"columnno":6,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000749","name":"MIN_PADDING","type":"ObjectExpression","value":"{\"value\":0.2,\"unit\":\"em\"}"}},"name":"MIN_PADDING","params":[],"type":["UnitValue"]},{"___id":"T000002R000138","___s":true,"attributes":["readonly"],"comment":"/**\r\n * @type {Object.<CSSAbsoluteUnit,number>}\r\n * @readonly\r\n */","kind":"constant","longname":"module:CSS~AbsoluteInPixels","memberof":"module:CSS","meta":{"range":[3381,3497],"filename":"css.js","lineno":116,"columnno":6,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000927","name":"AbsoluteInPixels","type":"ObjectExpression","value":"{\"px\":1,\"in\":96,\"cm\":\"\",\"mm\":\"\",\"pt\":\"\",\"pc\":16}"}},"name":"AbsoluteInPixels","params":[],"type":["Object.<CSSAbsoluteUnit, number>"]}],"typedef":[{"___id":"T000002R000128","___s":true,"comment":"/**\r\n * CSS Absolute units\r\n * @typedef {(\"cm\" | \"mm\" | \"in\" | \"px\" | \"pt\" | \"pc\")} CSSAbsoluteUnit\r\n */","description":"<p>CSS Absolute units</p>","kind":"typedef","longname":"module:CSS~CSSAbsoluteUnit","memberof":"module:CSS","meta":{"filename":"css.js","lineno":23,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"CSSAbsoluteUnit","type":["\"cm\"","\"mm\"","\"in\"","\"px\"","\"pt\"","\"pc\""]},{"___id":"T000002R000129","___s":true,"comment":"/**\r\n * CSS Font-relative units\r\n * @typedef {(\"em\" | \"ex\" | \"ch\" | \"rem\")} CSSFontUnit\r\n */","description":"<p>CSS Font-relative units</p>","kind":"typedef","longname":"module:CSS~CSSFontUnit","memberof":"module:CSS","meta":{"filename":"css.js","lineno":28,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"CSSFontUnit","type":["\"em\"","\"ex\"","\"ch\"","\"rem\""]},{"___id":"T000002R000130","___s":true,"comment":"/**\r\n * CSS unit\r\n * @typedef {(CSSAbsoluteUnit | CSSFontUnit | \"vw\" | \"vh\" | \"vmin\" | \"vmax\" | \"%\")} CSSUnit\r\n */","description":"<p>CSS unit</p>","kind":"typedef","longname":"module:CSS~CSSUnit","memberof":"module:CSS","meta":{"filename":"css.js","lineno":33,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"CSSUnit","type":["CSSAbsoluteUnit","CSSFontUnit","\"vw\"","\"vh\"","\"vmin\"","\"vmax\"","\"%\""]},{"___id":"T000002R000131","___s":true,"comment":"/**\r\n * Object describing a number of units\r\n * @typedef {Object} UnitValue\r\n * @property {number} value\r\n * @property {CSSUnit} unit\r\n */","description":"<p>Object describing a number of units</p>","kind":"typedef","longname":"module:CSS~UnitValue","memberof":"module:CSS","meta":{"filename":"css.js","lineno":38,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"UnitValue","properties":[{"type":["number"],"name":"value"},{"type":["CSSUnit"],"name":"unit"}],"type":["Object"]},{"___id":"T000002R000155","___s":true,"comment":"/**\r\n * Postion on canvas, negatives represent right/bottom distance\r\n * @typedef {Object} Coordinate\r\n * @property {number} x\r\n * @property {number} y\r\n */","description":"<p>Postion on canvas, negatives represent right/bottom distance</p>","kind":"typedef","longname":"module:CSS~Coordinate","memberof":"module:CSS","meta":{"filename":"css.js","lineno":157,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"Coordinate","properties":[{"type":["number"],"name":"x"},{"type":["number"],"name":"y"}],"type":["Object"]}],"function":[{"___id":"T000002R000132","___s":true,"comment":"/**\r\n * Convert unit value to pixels\r\n * @param {UnitValue} unitValue \r\n * @param {HTMLElement} element\r\n * @param {boolean} isHeight\r\n * @returns {number} The number of pixels equal to unitValue \r\n */","description":"<p>Convert unit value to pixels</p>","kind":"function","longname":"module:CSS~unitValueToPixels","memberof":"module:CSS","meta":{"range":[1305,1458],"filename":"css.js","lineno":52,"columnno":1,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000756","name":"unitValueToPixels","type":"FunctionDeclaration","paramnames":["unitValue","element","isHeight"]}},"name":"unitValueToPixels","params":[{"type":["UnitValue"],"name":"unitValue"},{"type":["HTMLElement"],"name":"element"},{"type":["boolean"],"name":"isHeight","defaultvalue":false}],"returns":{"type":["number"],"description":"<p>The number of pixels equal to unitValue</p>"}},{"___id":"T000002R000133","___s":true,"comment":"/**\r\n * Get conversion from unit to pixels\r\n * @param {CSSUnit} unit \r\n * @param {HTMLElement} element Element where unit applies\r\n * @param {boolean} isHeight Wether % refers to height\r\n * @returns {number}\r\n */","description":"<p>Get conversion from unit to pixels</p>","kind":"function","longname":"module:CSS~getUnitConversion","memberof":"module:CSS","meta":{"range":[1678,2576],"filename":"css.js","lineno":64,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000776","name":"getUnitConversion","type":"FunctionDeclaration","paramnames":["unit","element","isHeight"]},"vars":{"h":"module:CSS~getUnitConversion~h","w":"module:CSS~getUnitConversion~w"}},"name":"getUnitConversion","params":[{"type":["CSSUnit"],"name":"unit"},{"type":["HTMLElement"],"description":"<p>Element where unit applies</p>","name":"element"},{"type":["boolean"],"description":"<p>Wether % refers to height</p>","name":"isHeight","defaultvalue":false}],"returns":{"type":["number"]}},{"___id":"T000002R000136","___s":true,"comment":"/**\r\n * Returns the computed fontsize of element in pixels\r\n * @param {Element} element \r\n * @return {number}\r\n */","description":"<p>Returns the computed fontsize of element in pixels</p>","kind":"function","longname":"module:CSS~getFontSize","memberof":"module:CSS","meta":{"range":[2696,2824],"filename":"css.js","lineno":92,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000889","name":"getFontSize","type":"FunctionDeclaration","paramnames":["element"]}},"name":"getFontSize","params":[{"type":["Element"],"name":"element"}],"returns":{"type":["number"]}},{"___id":"T000002R000137","___s":true,"comment":"/**\r\n * Get the multiplier from font size to unit\r\n * @param {CSSFontUnit} unit \r\n * @returns {number}\r\n */","description":"<p>Get the multiplier from font size to unit</p>","kind":"function","longname":"module:CSS~getFontSizeMultiplier","memberof":"module:CSS","meta":{"range":[2937,3060],"filename":"css.js","lineno":101,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000906","name":"getFontSizeMultiplier","type":"FunctionDeclaration","paramnames":["unit"]}},"name":"getFontSizeMultiplier","params":[{"type":["CSSFontUnit"],"name":"unit"}],"returns":{"type":["number"]}},{"___id":"T000002R000145","___s":true,"attributes":["static"],"comment":"/**\r\n * Load css from path, assigningit a unique id, fails if element with id exists\r\n * @param {string} id Unique id of the stylesheet\r\n * @param {string} path path from EasyJs container to css\r\n * @param {boolean} force Delete item with id if it exists\r\n */","description":"<p>Load css from path, assigningit a unique id, fails if element with id exists</p>","kind":"function","longname":"module:CSS.loadCSS","memberof":"module:CSS","meta":{"range":[3987,4517],"filename":"css.js","lineno":137,"columnno":1,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100000948","name":"exports.loadCSS","type":"FunctionDeclaration","paramnames":["id","path","force"]}},"name":"loadCSS","params":[{"type":["string"],"description":"<p>Unique id of the stylesheet</p>","name":"id"},{"type":["string"],"description":"<p>path from EasyJs container to css</p>","name":"path"},{"type":["boolean"],"description":"<p>Delete item with id if it exists</p>","name":"force"}]},{"___id":"T000002R000156","___s":true,"comment":"/**\r\n * Get position when prevention overflow on a container\r\n * @param {HTMLElement} element\r\n * @param {number} position\r\n * @param {boolean} preventOverflow\r\n * @param {boolean} isHorizontal \r\n */","description":"<p>Get position when prevention overflow on a container</p>","kind":"function","longname":"module:CSS~getPositionOffset","memberof":"module:CSS","meta":{"range":[5107,5956],"filename":"css.js","lineno":171,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001041","name":"getPositionOffset","type":"FunctionDeclaration","paramnames":["element","position","preventOverflow","isHorizontal"]},"vars":{"undefined":null,"min_padding":"module:CSS~getPositionOffset~min_padding"}},"name":"getPositionOffset","params":[{"type":["HTMLElement"],"name":"element"},{"type":["number"],"name":"position"},{"type":["boolean"],"name":"preventOverflow"},{"type":["boolean"],"name":"isHorizontal","defaultvalue":true}]},{"___id":"T000002R000158","___s":true,"attributes":["static"],"comment":"/**\r\n * Position element fixed on viewport\r\n * @param {HTMLElement} element Element to position\r\n * @param {Coordinate} coordinate Coordinate to position in\r\n * @param {boolean} isLeft If element's left side is being positioned(as opposed to right)\r\n * @param {boolean} isTop If element's top side is being positioned(as opposed to bottom)\r\n * @param {CSSUnit} unit Unit for coordinates\r\n */","description":"<p>Position element fixed on viewport</p>","kind":"function","longname":"module:CSS.positionOnViewport","memberof":"module:CSS","meta":{"range":[6353,6667],"filename":"css.js","lineno":192,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001119","name":"exports.positionOnViewport","type":"FunctionDeclaration","paramnames":["element","coordinate","isLeft","isTop","unit"]}},"name":"positionOnViewport","params":[{"type":["HTMLElement"],"description":"<p>Element to position</p>","name":"element"},{"type":["Coordinate"],"description":"<p>Coordinate to position in</p>","name":"coordinate"},{"type":["boolean"],"description":"<p>If element's left side is being positioned(as opposed to right)</p>","name":"isLeft"},{"type":["boolean"],"description":"<p>If element's top side is being positioned(as opposed to bottom)</p>","name":"isTop"},{"type":["CSSUnit"],"description":"<p>Unit for coordinates</p>","name":"unit"}]},{"___id":"T000002R000163","___s":true,"attributes":["static"],"comment":"/**\r\n * Position corner of element on mouse\r\n * @param {Object} data\r\n * @param {HTMLElement} data.element Element to position\r\n * @param {boolean} [data.preventOverflow = false]  Shift position if the object would overflow\r\n * @param {MouseEvent} e \r\n */","description":"<p>Position corner of element on mouse</p>","kind":"function","longname":"module:CSS.positionOnMouse","memberof":"module:CSS","meta":{"range":[6928,7323],"filename":"css.js","lineno":207,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001176","name":"exports.positionOnMouse","type":"FunctionDeclaration","paramnames":["","e"]}},"name":"positionOnMouse","params":[{"type":["Object"],"name":"data","properties":[{"type":["HTMLElement"],"description":"<p>Element to position</p>","name":"element"},{"type":["boolean"],"optional":true,"defaultvalue":false,"description":"<p>Shift position if the object would overflow</p>","name":"preventOverflow"}]},{"type":["MouseEvent"],"name":"e"}]},{"___id":"T000002R000172","___s":true,"attributes":["static"],"comment":"/**\r\n * Position element relative to reference element, offsets will be relative to reference element\r\n * @param {HTMLElement} referenceElement Reference for positioning: will be relative positioned if static\r\n * @param {HTMLElement} element Element to position\r\n * @param {UnitValue} xOffset  Offset in x\r\n * @param {UnitValue} yOffset  Offset in y\r\n * @param {boolean} isLeft If element's left side is being positioned(as opposed to right)\r\n * @param {boolean} isTop If element's top side is being positioned(as opposed to bottom)\r\n */","description":"<p>Position element relative to reference element, offsets will be relative to reference element</p>","kind":"function","longname":"module:CSS.positionRelativeOffset","memberof":"module:CSS","meta":{"range":[7866,8380],"filename":"css.js","lineno":228,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001244","name":"exports.positionRelativeOffset","type":"FunctionDeclaration","paramnames":["referenceElement","element","xOffset","yOffset","isLeft","isTop"]}},"name":"positionRelativeOffset","params":[{"type":["HTMLElement"],"description":"<p>Reference for positioning: will be relative positioned if static</p>","name":"referenceElement"},{"type":["HTMLElement"],"description":"<p>Element to position</p>","name":"element"},{"type":["UnitValue"],"description":"<p>Offset in x</p>","name":"xOffset"},{"type":["UnitValue"],"description":"<p>Offset in y</p>","name":"yOffset"},{"type":["boolean"],"description":"<p>If element's left side is being positioned(as opposed to right)</p>","name":"isLeft"},{"type":["boolean"],"description":"<p>If element's top side is being positioned(as opposed to bottom)</p>","name":"isTop"}]},{"___id":"T000002R000178","___s":true,"attributes":["static"],"comment":"/**\r\n * Postion element relative to reference element\r\n * @param {HTMLElement} referenceElement Reference for positioning\r\n * @param {HTMLElement} element Element to position\r\n * @param {(\"above\" | \"below\" | \"right\" | \"left\" | \"center\")} position\r\n */","description":"<p>Postion element relative to reference element</p>","kind":"function","longname":"module:CSS.positionRelative","memberof":"module:CSS","meta":{"range":[8637,9247],"filename":"css.js","lineno":244,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001317","name":"exports.positionRelative","type":"FunctionDeclaration","paramnames":["referenceElement","element","position"]}},"name":"positionRelative","params":[{"type":["HTMLElement"],"description":"<p>Reference for positioning</p>","name":"referenceElement"},{"type":["HTMLElement"],"description":"<p>Element to position</p>","name":"element"},{"type":["\"above\"","\"below\"","\"right\"","\"left\"","\"center\""],"name":"position"}]}]}},{"___id":"T000002R000190","___s":true,"comment":"/**\r\n * Utility function to handle dates\r\n * @module DateUtilities\r\n */","description":"<p>Utility function to handle dates</p>","kind":"module","longname":"module:DateUtilities","meta":{"filename":"date.js","lineno":4,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"DateUtilities","members":{"function":[{"___id":"T000002R000198","___s":true,"attributes":["static"],"comment":"/**\r\n * Get same date as given but with time at 00:00\r\n * @param {Date} date \r\n * @returns {Date}\r\n */","description":"<p>Get same date as given but with time at 00:00</p>","kind":"function","longname":"module:DateUtilities.getDayStart","memberof":"module:DateUtilities","meta":{"range":[679,789],"filename":"date.js","lineno":22,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001454","name":"exports.getDayStart","type":"FunctionDeclaration","paramnames":["date"]}},"name":"getDayStart","params":[{"type":["Date"],"name":"date"}],"returns":{"type":["Date"]}},{"___id":"T000002R000200","___s":true,"attributes":["static"],"comment":"/**\r\n * Get first date of month of given date, offset by given offsets\r\n * @param {Date} date\r\n * @param {number} monthOffset \r\n * @param {number} dateOffset\r\n * @returns {Date}\r\n */","description":"<p>Get first date of month of given date, offset by given offsets</p>","kind":"function","longname":"module:DateUtilities.getFirstOfMonth","memberof":"module:DateUtilities","meta":{"range":[978,1140],"filename":"date.js","lineno":33,"columnno":1,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001474","name":"exports.getFirstOfMonth","type":"FunctionDeclaration","paramnames":["date","monthOffset","dateOffset"]}},"name":"getFirstOfMonth","params":[{"type":["Date"],"name":"date"},{"type":["number"],"name":"monthOffset"},{"type":["number"],"name":"dateOffset"}],"returns":{"type":["Date"]}},{"___id":"T000002R000202","___s":true,"attributes":["static"],"comment":"/**\r\n * Returns the number of days in the month of the given date\r\n * @param {Date} date \r\n * @returns {number}\r\n */","description":"<p>Returns the number of days in the month of the given date</p>","kind":"function","longname":"module:DateUtilities.daysInMonth","memberof":"module:DateUtilities","meta":{"range":[1262,1352],"filename":"date.js","lineno":42,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001501","name":"exports.daysInMonth","type":"FunctionDeclaration","paramnames":["date"]}},"name":"daysInMonth","params":[{"type":["Date"],"name":"date"}],"returns":{"type":["number"]}},{"___id":"T000002R000204","___s":true,"attributes":["static"],"comment":"/**\r\n * Returns the # of days between the two dates, ignoring time of day\r\n * @param {Date} dateA\r\n * @param {Date} dateB\r\n * @returns {number}\r\n */","description":"<p>Returns the # of days between the two dates, ignoring time of day</p>","kind":"function","longname":"module:DateUtilities.dayDifference","memberof":"module:DateUtilities","meta":{"range":[1506,1705],"filename":"date.js","lineno":52,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001516","name":"exports.dayDifference","type":"FunctionDeclaration","paramnames":["dateA","dateB"]}},"name":"dayDifference","params":[{"type":["Date"],"name":"dateA"},{"type":["Date"],"name":"dateB"}],"returns":{"type":["number"]}},{"___id":"T000002R000208","___s":true,"attributes":["static"],"comment":"/**\r\n * Return a string with date in given format\r\n * @param {Date} date \r\n * @param {string} format \r\n * @returns {string}\r\n */","description":"<p>Return a string with date in given format</p>","kind":"function","longname":"module:DateUtilities.toFormat","memberof":"module:DateUtilities","meta":{"range":[1839,2618],"filename":"date.js","lineno":64,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001546","name":"exports.toFormat","type":"FunctionDeclaration","paramnames":["date","format"]}},"name":"toFormat","params":[{"type":["Date"],"name":"date"},{"type":["string"],"name":"format"}],"returns":{"type":["string"]}},{"___id":"T000002R000223","___s":true,"attributes":["static"],"comment":"/**\r\n * Return date as reference from today:\r\n *  - If date is yesterday, today or tomorrow returns \"Yesterday\", \"Today\" and \"Tomorrow\" respectively\r\n *  - If date is in the next 7 days it returns the day of the week(e.g. \"Monday\")\r\n *  - Otherwise, returns date formatted as genericFormat  \r\n * @param {Date} date \r\n * @param {string} genericFormat \r\n * @returns {string}\r\n */","description":"<p>Return date as reference from today:</p>\n<ul>\n<li>If date is yesterday, today or tomorrow returns &quot;Yesterday&quot;, &quot;Today&quot; and &quot;Tomorrow&quot; respectively</li>\n<li>If date is in the next 7 days it returns the day of the week(e.g. &quot;Monday&quot;)</li>\n<li>Otherwise, returns date formatted as genericFormat</li>\n</ul>","kind":"function","longname":"module:DateUtilities.todayReference","memberof":"module:DateUtilities","meta":{"range":[3001,3357],"filename":"date.js","lineno":92,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001710","name":"exports.todayReference","type":"FunctionDeclaration","paramnames":["date","genericFormat"]}},"name":"todayReference","params":[{"type":["Date"],"name":"date"},{"type":["string"],"name":"genericFormat"}],"returns":{"type":["string"]}}]}},{"___id":"T000002R000226","___s":true,"comment":"/**\r\n * Utility Functions and options to add elements to DOM\r\n * @module DOM\r\n */","description":"<p>Utility Functions and options to add elements to DOM</p>","kind":"module","longname":"module:DOM","meta":{"filename":"dom.js","lineno":3,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"DOM","members":{"typedef":[{"___id":"T000002R000227","___s":true,"comment":"/**\r\n * @callback domOptionCallback\r\n * @param {Node} element Element to insert\r\n * @param {Node} reference Reference Element\r\n */","kind":"typedef","longname":"module:DOM~domOptionCallback","memberof":"module:DOM","meta":{"filename":"dom.js","lineno":11,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"domOptionCallback","params":[{"type":["Node"],"description":"<p>Element to insert</p>","name":"element"},{"type":["Node"],"description":"<p>Reference Element</p>","name":"reference"}],"type":["function"]}],"function":[{"___id":"T000002R000228","___s":true,"attributes":["static"],"comment":"/**\r\n * Insert given element after reference element\r\n * @type {domOptionCallback}\r\n */","description":"<p>Insert given element after reference element</p>","kind":"function","longname":"module:DOM.insertAfter","memberof":"module:DOM","meta":{"range":[558,744],"filename":"dom.js","lineno":21,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001767","name":"exports.insertAfter","type":"FunctionDeclaration","paramnames":["element","reference"]}},"name":"insertAfter","type":["domOptionCallback"]},{"___id":"T000002R000230","___s":true,"attributes":["static"],"comment":"/**\r\n * Insert given element before reference element\r\n * @type {domOptionCallback}\r\n */","description":"<p>Insert given element before reference element</p>","kind":"function","longname":"module:DOM.insertBefore","memberof":"module:DOM","meta":{"range":[838,1013],"filename":"dom.js","lineno":30,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001793","name":"exports.insertBefore","type":"FunctionDeclaration","paramnames":["element","reference"]}},"name":"insertBefore","type":["domOptionCallback"]},{"___id":"T000002R000232","___s":true,"attributes":["static"],"comment":"/**\r\n * Insert element as first child of parent\r\n * @type {domOptionCallback}\r\n */","description":"<p>Insert element as first child of parent</p>","kind":"function","longname":"module:DOM.insertFirst","memberof":"module:DOM","meta":{"range":[1101,1211],"filename":"dom.js","lineno":39,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001817","name":"exports.insertFirst","type":"FunctionDeclaration","paramnames":["element","reference"]}},"name":"insertFirst","type":["domOptionCallback"]},{"___id":"T000002R000234","___s":true,"attributes":["static"],"comment":"/**\r\n * Remove element from DOM\r\n * @param {Node} [element]\r\n */","description":"<p>Remove element from DOM</p>","kind":"function","longname":"module:DOM.removeElement","memberof":"module:DOM","meta":{"range":[1281,1421],"filename":"dom.js","lineno":47,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001832","name":"exports.removeElement","type":"FunctionDeclaration","paramnames":["element"]}},"name":"removeElement","params":[{"type":["Node"],"optional":true,"name":"element"}]},{"___id":"T000002R000236","___s":true,"attributes":["static"],"comment":"/**\r\n * Remove all elements in array given\r\n * @param {Element[] | HTMLCollection} elements \r\n */","description":"<p>Remove all elements in array given</p>","kind":"function","longname":"module:DOM.removeElements","memberof":"module:DOM","meta":{"range":[1524,1723],"filename":"dom.js","lineno":57,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001852","name":"exports.removeElements","type":"FunctionDeclaration","paramnames":["elements"]}},"name":"removeElements","params":[{"type":["Array.<Element>","HTMLCollection"],"name":"elements"}]}],"class":[{"___id":"T000002R000242","___s":true,"attributes":["static"],"comment":"/**\r\n     * Builds a DOM insertion option\r\n     * @param {Node} referenceElement\r\n     * @param {domOptionCallback} callback\r\n     */","description":"<p>Builds a DOM insertion option</p>","kind":"class","longname":"module:DOM.DOMOption","memberof":"module:DOM","meta":{"range":[2164,2298],"filename":"dom.js","lineno":74,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001881","name":"exports.DOMOption","type":"MethodDefinition","paramnames":["referenceElement","callback"]},"vars":{"":null}},"name":"DOMOption","params":[{"type":["Node"],"name":"referenceElement"},{"type":["domOptionCallback"],"name":"callback"}],"members":{"function":[{"___id":"T000002R000245","___s":true,"comment":"/**\r\n     * Apply option to element\r\n     * @param {Node} element \r\n     */","description":"<p>Apply option to element</p>","kind":"function","longname":"module:DOM.DOMOption#apply","memberof":"module:DOM.DOMOption","meta":{"range":[2387,2464],"filename":"dom.js","lineno":83,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001899","name":"DOMOption#apply","type":"MethodDefinition","paramnames":["element"]},"vars":{"":null}},"name":"apply","params":[{"type":["Node"],"name":"element"}]}]}}]}},{"___id":"T000002R000253","___s":true,"comment":"/**\r\n * Utility classes to handle strings\r\n * @module StringUtilities\r\n */","description":"<p>Utility classes to handle strings</p>","kind":"module","longname":"module:StringUtilities","meta":{"filename":"string.js","lineno":3,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"StringUtilities","members":{"typedef":[{"___id":"T000002R000254","___s":true,"comment":"/**\r\n * @callback StringModifier\r\n * @param {string} string Modifying string\r\n * @returns {string}\r\n */","kind":"typedef","longname":"module:StringUtilities~StringModifier","memberof":"module:StringUtilities","meta":{"filename":"string.js","lineno":8,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{}},"name":"StringModifier","params":[{"type":["string"],"description":"<p>Modifying string</p>","name":"string"}],"returns":{"type":["string"]},"type":["function"]}],"function":[{"___id":"T000002R000255","___s":true,"attributes":["static"],"comment":"/**\r\n * Split the string into words by separator, applies func to each and returns all words separated by returnSeparator\r\n * @param {string} string \r\n * @param {string} separator\r\n * @param {StringModifier} func\r\n * @param {string} returnSeparator\r\n * @returns {string}\r\n */","description":"<p>Split the string into words by separator, applies func to each and returns all words separated by returnSeparator</p>","kind":"function","longname":"module:StringUtilities.mapWords","memberof":"module:StringUtilities","meta":{"range":[478,653],"filename":"string.js","lineno":22,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100001986","name":"exports.mapWords","type":"FunctionDeclaration","paramnames":["string","func","separator","returnSeparator"]}},"name":"mapWords","params":[{"type":["string"],"name":"string"},{"type":["string"],"name":"separator"},{"type":["StringModifier"],"name":"func"},{"type":["string"],"name":"returnSeparator"}],"returns":{"type":["string"]}},{"___id":"T000002R000258","___s":true,"attributes":["static"],"comment":"/**\r\n * Changes the first letter to uppercase and the rest to lowercase\r\n * @param {string} string \r\n * @returns {string}\r\n */","description":"<p>Changes the first letter to uppercase and the rest to lowercase</p>","kind":"function","longname":"module:StringUtilities.wordToTitleCase","memberof":"module:StringUtilities","meta":{"range":[785,913],"filename":"string.js","lineno":32,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100002016","name":"exports.wordToTitleCase","type":"FunctionDeclaration","paramnames":["string"]}},"name":"wordToTitleCase","params":[{"type":["string"],"name":"string"}],"returns":{"type":["string"]}},{"___id":"T000002R000260","___s":true,"attributes":["static"],"comment":"/**\r\n * Converts a string to Title Case, using separator to split words\r\n * @param {string} string \r\n * @param {string} separator \r\n * @returns {string}\r\n */","description":"<p>Converts a string to Title Case, using separator to split words</p>","kind":"function","longname":"module:StringUtilities.toTitleCase","memberof":"module:StringUtilities","meta":{"range":[1078,1189],"filename":"string.js","lineno":43,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100002040","name":"exports.toTitleCase","type":"FunctionDeclaration","paramnames":["string","separator"]}},"name":"toTitleCase","params":[{"type":["string"],"name":"string"},{"type":["string"],"name":"separator"}],"returns":{"type":["string"]}},{"___id":"T000002R000262","___s":true,"attributes":["static"],"comment":"/**\r\n * Fill the string by placing fill on the left to get desired length\r\n * @param {string} string \r\n * @param {number} length \r\n * @param {string} fill \r\n */","description":"<p>Fill the string by placing fill on the left to get desired length</p>","kind":"function","longname":"module:StringUtilities.fillString","memberof":"module:StringUtilities","meta":{"range":[1355,1514],"filename":"string.js","lineno":53,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100002054","name":"exports.fillString","type":"FunctionDeclaration","paramnames":["string","length","fill"]}},"name":"fillString","params":[{"type":["string"],"name":"string"},{"type":["number"],"name":"length"},{"type":["string"],"name":"fill"}]},{"___id":"T000002R000264","___s":true,"attributes":["static"],"comment":"/**\r\n * Convert any into an html safe string\r\n * @param {*} str \r\n * @returns {string}\r\n */","description":"<p>Convert any into an html safe string</p>","kind":"function","longname":"module:StringUtilities.htmlSafe","memberof":"module:StringUtilities","meta":{"range":[1613,1762],"filename":"string.js","lineno":64,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\base","code":{"id":"astnode100002081","name":"exports.htmlSafe","type":"FunctionDeclaration","paramnames":["str"]}},"name":"htmlSafe","params":[{"type":["*"],"name":"str"}],"returns":{"type":["string"]}}]}},{"___id":"T000002R000267","___s":true,"comment":"/**\r\n * @module API\r\n */","kind":"module","longname":"module:API","meta":{"filename":"API.js","lineno":2,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{}},"name":"API","members":{"function":[{"___id":"T000002R000268","___s":true,"comment":"/**\r\n * Get cookie by name\r\n * @param {string} name \r\n * @returns {string | null}\r\n */","description":"<p>Get cookie by name</p>","kind":"function","longname":"module:API~getCookie","memberof":"module:API","meta":{"range":[351,920],"filename":"API.js","lineno":15,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002111","name":"getCookie","type":"FunctionDeclaration","paramnames":["name"]},"vars":{"cookieValue":"module:API~cookieValue","cookies":"module:API~getCookie~cookies","i":"module:API~getCookie~i","cookie":"module:API~getCookie~cookie"}},"name":"getCookie","params":[{"type":["string"],"name":"name"}],"returns":{"type":["string","null"]}}],"typedef":[{"___id":"T000002R000274","___s":true,"comment":"/**\r\n * @callback ObjectCallback Callback that takes an object as only parameter\r\n * @param {Object.<string,*>} param\r\n */","kind":"typedef","longname":"module:API~ObjectCallback","memberof":"module:API","meta":{"filename":"API.js","lineno":35,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{}},"name":"ObjectCallback","params":[{"type":["Object.<string, *>"],"name":"param"}],"type":["function"]},{"___id":"T000002R000275","___s":true,"comment":"/**\r\n * @typedef {Object} LoadingData\r\n * @property {ObjectCallback} renderer\r\n * @property {Object.<string,*>} render_param\r\n * @property {ObjectCallback} derenderer\r\n * @property {Object.<string,*>} derender_param\r\n */","kind":"typedef","longname":"module:API~LoadingData","memberof":"module:API","meta":{"filename":"API.js","lineno":40,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{}},"name":"LoadingData","properties":[{"type":["ObjectCallback"],"name":"renderer"},{"type":["Object.<string, *>"],"name":"render_param"},{"type":["ObjectCallback"],"name":"derenderer"},{"type":["Object.<string, *>"],"name":"derender_param"}],"type":["Object"]},{"___id":"T000002R000276","___s":true,"comment":"/**\r\n * @typedef {('POST'|'PUT'|'DELETE'|'GET')} RESTMethod\r\n */","kind":"typedef","longname":"module:API~RESTMethod","memberof":"module:API","meta":{"filename":"API.js","lineno":48,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{}},"name":"RESTMethod","type":["'POST'","'PUT'","'DELETE'","'GET'"]},{"___id":"T000002R000277","___s":true,"comment":"/**\r\n * @typedef {Object} RequestBody\r\n * @property {RESTMethod} method\r\n * @property {string} body\r\n * @property {RequestHeader} headers\r\n * @property {RequestCredentials} credentials\r\n */","kind":"typedef","longname":"module:API~RequestBody","memberof":"module:API","meta":{"filename":"API.js","lineno":52,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{}},"name":"RequestBody","properties":[{"type":["RESTMethod"],"name":"method"},{"type":["string"],"name":"body"},{"type":["RequestHeader"],"name":"headers"},{"type":["RequestCredentials"],"name":"credentials"}],"type":["Object"]},{"___id":"T000002R000278","___s":true,"comment":"/**\r\n * @typedef {Object} RequestHeader\r\n * @property {string} `Content-Type`\r\n * @property {string} `X-CSRFToken` \r\n */","kind":"typedef","longname":"module:API~RequestHeader","memberof":"module:API","meta":{"filename":"API.js","lineno":60,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{}},"name":"RequestHeader","properties":[{"type":["string"],"name":"`Content-Type`"},{"type":["string"],"name":"`X-CSRFToken`"}],"type":["Object"]},{"___id":"T000002R000279","___s":true,"comment":"/**\r\n * @callback ResponseCallback Callback that takes a promise of an API request\r\n * @param {Promise.<Object.<string,string>>} promise\r\n */","kind":"typedef","longname":"module:API~ResponseCallback","memberof":"module:API","meta":{"filename":"API.js","lineno":66,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{}},"name":"ResponseCallback","params":[{"type":["Promise.<Object.<string, string>>"],"name":"promise"}],"type":["function"]}],"class":[{"___id":"T000002R000284","___s":true,"attributes":["static"],"comment":"/**\r\n     * Construct an APIRequest\r\n     * @param {string} url \r\n     * @param {RESTMethod} method\r\n     * @param {LoadingData | null} loading_data Loading animation to render\r\n     * @param {string} id\r\n     */","description":"<p>Construct an APIRequest</p>","kind":"class","longname":"module:API.API","memberof":"module:API","meta":{"range":[2622,2935],"filename":"API.js","lineno":89,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002205","name":"exports.API","type":"MethodDefinition","paramnames":["url","method","loading_data","id"]},"vars":{"":null}},"name":"API","params":[{"type":["string"],"name":"url"},{"type":["RESTMethod"],"name":"method"},{"type":["LoadingData","null"],"description":"<p>Loading animation to render</p>","name":"loading_data"},{"type":["string"],"name":"id"}],"members":{"function":[{"___id":"T000002R000292","___s":true,"attributes":["static"],"comment":"/**\r\n     * Returns an id not in APIRequest.BASES\r\n     * @param {string} id \r\n     * @return {string}\r\n     */","description":"<p>Returns an id not in APIRequest.BASES</p>","kind":"function","longname":"module:API.API.getUniqueID","memberof":"module:API.API","meta":{"range":[3300,3515],"filename":"API.js","lineno":111,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002269","name":"API.getUniqueID","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"name":"getUniqueID","params":[{"type":["string"],"name":"id"}],"returns":{"type":["string"]}},{"___id":"T000002R000296","___s":true,"attributes":["static"],"comment":"/**\r\n     * Print a header with given color\r\n     * @param {string} header \r\n     * @param {string} color\r\n     */","description":"<p>Print a header with given color</p>","kind":"function","longname":"module:API.API.printHeader","memberof":"module:API.API","meta":{"range":[3643,3830],"filename":"API.js","lineno":126,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002303","name":"API.printHeader","type":"MethodDefinition","paramnames":["header","color"]},"vars":{"":null}},"name":"printHeader","params":[{"type":["string"],"name":"header"},{"type":["string"],"name":"color"}]},{"___id":"T000002R000297","___s":true,"attributes":["static"],"comment":"/**\r\n     * If PRINT_DATA is set to true, print a header with given color; and the data as a table\r\n     * @param {string} header \r\n     * @param {string} color\r\n     * @param {Object} data \r\n     */","description":"<p>If PRINT_DATA is set to true, print a header with given color; and the data as a table</p>","kind":"function","longname":"module:API.API.printTable","memberof":"module:API.API","meta":{"range":[4043,4194],"filename":"API.js","lineno":139,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002320","name":"API.printTable","type":"MethodDefinition","paramnames":["header","color","data"]},"vars":{"":null}},"name":"printTable","params":[{"type":["string"],"name":"header"},{"type":["string"],"name":"color"},{"type":["Object"],"name":"data"}]},{"___id":"T000002R000298","___s":true,"attributes":["async","static"],"comment":"/**\r\n     * Find request with the given id, send it with given data if found, throw error otherwise\r\n     * @param {string} id \r\n     * @param {Object.<string,string>} data \r\n     * @return {Promise.<Object.<string,string>>}\r\n     */","description":"<p>Find request with the given id, send it with given data if found, throw error otherwise</p>","kind":"function","longname":"module:API.API.sendRequestById","memberof":"module:API.API","meta":{"range":[4441,4627],"filename":"API.js","lineno":152,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002344","name":"API.sendRequestById","type":"MethodDefinition","paramnames":["id","data"]},"vars":{"":null}},"name":"sendRequestById","params":[{"type":["string"],"name":"id"},{"type":["Object.<string, string>"],"name":"data"}],"returns":{"type":["Promise.<Object.<string, string>>"]}},{"___id":"T000002R000299","___s":true,"attributes":["async","static"],"comment":"/**\r\n     * Find API with the given id, send request with given data if found and pass response to callback, throw error otherwise\r\n     * @param {string} id \r\n     * @param {Object.<string,string>} data \r\n     * @param {ResponseCallback} callback\r\n     */","description":"<p>Find API with the given id, send request with given data if found and pass response to callback, throw error otherwise</p>","kind":"function","longname":"module:API.API.sendRequestByIdCallback","memberof":"module:API.API","meta":{"range":[4897,5012],"filename":"API.js","lineno":163,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002372","name":"API.sendRequestByIdCallback","type":"MethodDefinition","paramnames":["id","data","callback"]},"vars":{"":null}},"name":"sendRequestByIdCallback","params":[{"type":["string"],"name":"id"},{"type":["Object.<string, string>"],"name":"data"},{"type":["ResponseCallback"],"name":"callback"}]},{"___id":"T000002R000300","___s":true,"attributes":["static"],"comment":"/**\r\n     * Delete API with given id\r\n     * @param {string} id \r\n     */","description":"<p>Delete API with given id</p>","kind":"function","longname":"module:API.API.removeById","memberof":"module:API.API","meta":{"range":[5099,5243],"filename":"API.js","lineno":171,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002388","name":"API.removeById","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"name":"removeById","params":[{"type":["string"],"name":"id"}]},{"___id":"T000002R000301","___s":true,"comment":"/**\r\n     * Get a URL to send the request\r\n     * @param {Object.<string,string>} data \r\n     * @returns {string}\r\n     */","description":"<p>Get a URL to send the request</p>","kind":"function","longname":"module:API.API#getRequestUrl","memberof":"module:API.API","meta":{"range":[5620,5957],"filename":"API.js","lineno":185,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002411","name":"API#getRequestUrl","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"name":"getRequestUrl","params":[{"type":["Object.<string, string>"],"name":"data"}],"returns":{"type":["string"]}},{"___id":"T000002R000306","___s":true,"comment":"/**\r\n     * Get the body to send the request\r\n     * @param {Object.<string,string>} data \r\n     * @returns {RequestBody|{}}\r\n     */","description":"<p>Get the body to send the request</p>","kind":"function","longname":"module:API.API#getRequestBody","memberof":"module:API.API","meta":{"range":[6104,6417],"filename":"API.js","lineno":200,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002471","name":"API#getRequestBody","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"name":"getRequestBody","params":[{"type":["Object.<string, string>"],"name":"data"}],"returns":{"type":["RequestBody","Object"]}},{"___id":"T000002R000313","___s":true,"attributes":["async"],"comment":"/**\r\n     * Send request with given data and return the response data\r\n     * @param {Object.<string,string>} data\r\n     * @return {Promise.<Object.<string,any>>}\r\n     */","description":"<p>Send request with given data and return the response data</p>","kind":"function","longname":"module:API.API#sendRequest","memberof":"module:API.API","meta":{"range":[6600,7679],"filename":"API.js","lineno":214,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002506","name":"API#sendRequest","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"name":"sendRequest","params":[{"type":["Object.<string, string>"],"name":"data"}],"returns":{"type":["Promise.<Object.<string, any>>"]}},{"___id":"T000002R000321","___s":true,"comment":"/**\r\n     * Send request and pass response data to callback after delay, another call to this function cancels last call and restarts time\r\n     * @param {Object.<string,string>} data \r\n     * @param {ObjectCallback} callback \r\n     * @param {number} delay \r\n     */","description":"<p>Send request and pass response data to callback after delay, another call to this function cancels last call and restarts time</p>","kind":"function","longname":"module:API.API#sendDebouncedRequest","memberof":"module:API.API","meta":{"range":[7959,8183],"filename":"API.js","lineno":247,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002671","name":"API#sendDebouncedRequest","type":"MethodDefinition","paramnames":["data","callback","delay"]},"vars":{"":null}},"name":"sendDebouncedRequest","params":[{"type":["Object.<string, string>"],"name":"data"},{"type":["ObjectCallback"],"name":"callback"},{"type":["number"],"name":"delay"}]}]}}]}},{"___id":"T000002R000323","___s":true,"comment":"/**\r\n * @module SeamlessPage\r\n */","kind":"module","longname":"module:SeamlessPage","meta":{"filename":"SeamlessPage.js","lineno":2,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{}},"name":"SeamlessPage","members":{"typedef":[{"___id":"T000002R000324","___s":true,"comment":"/**\r\n * @typedef {Object} State\r\n * @property {string} url\r\n * @property {function} renderer\r\n */","kind":"typedef","longname":"module:SeamlessPage~State","memberof":"module:SeamlessPage","meta":{"filename":"SeamlessPage.js","lineno":7,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{}},"name":"State","properties":[{"type":["string"],"name":"url"},{"type":["function"],"name":"renderer"}],"type":["Object"]}],"class":[{"___id":"T000002R000325","___s":true,"attributes":["static"],"classdesc":"<p>A seamless page loader</p>","comment":"/**\r\n * A seamless page loader\r\n * @class\r\n */","kind":"class","longname":"module:SeamlessPage.SeamlessPage","memberof":"module:SeamlessPage","meta":{"range":[202,3071],"filename":"SeamlessPage.js","lineno":17,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002706","name":"exports.SeamlessPage","type":"ClassDeclaration"}},"name":"SeamlessPage","members":{"member":[{"___id":"T000002R000327","___s":true,"attributes":["nullable"],"comment":"/**@type {Object.<string, State>?} */","kind":"member","longname":"module:SeamlessPage.SeamlessPage#states","memberof":"module:SeamlessPage.SeamlessPage","meta":{"range":[273,294],"filename":"SeamlessPage.js","lineno":18,"columnno":42,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002710","name":"states","type":"ClassProperty"}},"name":"states","type":["Object.<string, State>"]},{"___id":"T000002R000328","___s":true,"comment":"/**@type {function}  */","kind":"member","longname":"module:SeamlessPage.SeamlessPage#reset","memberof":"module:SeamlessPage.SeamlessPage","meta":{"range":[324,346],"filename":"SeamlessPage.js","lineno":19,"columnno":28,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002712","name":"reset","type":"ClassProperty"}},"name":"reset","type":["function"]}],"function":[{"___id":"T000002R000329","___s":true,"attributes":["static"],"comment":"/**\r\n     * Set the SeamlessPage with the given states, reset function and initial state\r\n     * @param {Object.<string,State>} states A map of state keys and their rendering functions;\r\n     * @param {string} initState The initial state to load(Won't create a history navigation)\r\n     * @param {function} resetCallback The callback to run whenever a new state is rendered\r\n     */","description":"<p>Set the SeamlessPage with the given states, reset function and initial state</p>","kind":"function","longname":"module:SeamlessPage.SeamlessPage.set","memberof":"module:SeamlessPage.SeamlessPage","meta":{"range":[752,1052],"filename":"SeamlessPage.js","lineno":28,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002715","name":"SeamlessPage.set","type":"MethodDefinition","paramnames":["states","initState","resetCallback"]},"vars":{"":null}},"name":"set","params":[{"type":["Object.<string, State>"],"description":"<p>A map of state keys and their rendering functions;</p>","name":"states"},{"type":["string"],"description":"<p>The initial state to load(Won't create a history navigation)</p>","name":"initState"},{"type":["function"],"description":"<p>The callback to run whenever a new state is rendered</p>","name":"resetCallback"}]},{"___id":"T000002R000333","___s":true,"attributes":["static"],"comment":"/**\r\n     * Loads state of given PopStateEvent\r\n     * @param {PopStateEvent} e \r\n     */","description":"<p>Loads state of given PopStateEvent</p>","kind":"function","longname":"module:SeamlessPage.SeamlessPage.handlePop","memberof":"module:SeamlessPage.SeamlessPage","meta":{"range":[1155,1234],"filename":"SeamlessPage.js","lineno":42,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002756","name":"SeamlessPage.handlePop","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"name":"handlePop","params":[{"type":["PopStateEvent"],"name":"e"}]},{"___id":"T000002R000334","___s":true,"attributes":["static"],"comment":"/**\r\n     * If states are not set or stateKey is invalid, throw error, otherwise return State\r\n     * @param {string} stateKey \r\n     * @returns {State} State of given key\r\n     */","description":"<p>If states are not set or stateKey is invalid, throw error, otherwise return State</p>","kind":"function","longname":"module:SeamlessPage.SeamlessPage.checkStateValidity","memberof":"module:SeamlessPage.SeamlessPage","meta":{"range":[1428,1742],"filename":"SeamlessPage.js","lineno":51,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002771","name":"SeamlessPage.checkStateValidity","type":"MethodDefinition","paramnames":["stateKey"]},"vars":{"":null}},"name":"checkStateValidity","params":[{"type":["string"],"name":"stateKey"}],"returns":{"type":["State"],"description":"<p>State of given key</p>"}},{"___id":"T000002R000335","___s":true,"attributes":["static"],"comment":"/**\r\n     * Load stateKey\r\n     * @param {string} stateKey The key of the state to load\r\n     * @param {boolean} navigate Wether the loading should create a state in the history\r\n     */","description":"<p>Load stateKey</p>","kind":"function","longname":"module:SeamlessPage.SeamlessPage.loadState","memberof":"module:SeamlessPage.SeamlessPage","meta":{"range":[1942,2233],"filename":"SeamlessPage.js","lineno":62,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002803","name":"SeamlessPage.loadState","type":"MethodDefinition","paramnames":["stateKey","navigate"]},"vars":{"":null}},"name":"loadState","params":[{"type":["string"],"description":"<p>The key of the state to load</p>","name":"stateKey"},{"type":["boolean"],"description":"<p>Wether the loading should create a state in the history</p>","name":"navigate","defaultvalue":true}]},{"___id":"T000002R000338","___s":true,"attributes":["static"],"comment":"/**\r\n     * Run reset and then the renderer callback of the given stateKey\r\n     * @param {string} stateKey The key of the state to render\r\n     */","description":"<p>Run reset and then the renderer callback of the given stateKey</p>","kind":"function","longname":"module:SeamlessPage.SeamlessPage.renderState","memberof":"module:SeamlessPage.SeamlessPage","meta":{"range":[2394,2555],"filename":"SeamlessPage.js","lineno":73,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002844","name":"SeamlessPage.renderState","type":"MethodDefinition","paramnames":["stateKey"]},"vars":{"":null}},"name":"renderState","params":[{"type":["string"],"description":"<p>The key of the state to render</p>","name":"stateKey"}]},{"___id":"T000002R000340","___s":true,"attributes":["static"],"comment":"/**\r\n     * Add a state\r\n     * @param {string} stateKey \r\n     * @param {string} url\r\n     * @param {function} renderer \r\n     */","description":"<p>Add a state</p>","kind":"function","longname":"module:SeamlessPage.SeamlessPage.addState","memberof":"module:SeamlessPage.SeamlessPage","meta":{"range":[2699,3062],"filename":"SeamlessPage.js","lineno":85,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns","code":{"id":"astnode100002867","name":"SeamlessPage.addState","type":"MethodDefinition","paramnames":["stateKey","url","renderer"]},"vars":{"":null}},"name":"addState","params":[{"type":["string"],"name":"stateKey"},{"type":["string"],"name":"url"},{"type":["function"],"name":"renderer"}]}]}}]}},{"___id":"T000002R000344","___s":true,"comment":"/**\r\n * Builder of common displays for html\r\n * @module Displays\r\n */","description":"<p>Builder of common displays for html</p>","kind":"module","longname":"module:Displays","meta":{"filename":"displays.js","lineno":9,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{}},"name":"Displays","members":{"class":[{"___id":"T000002R000356","___s":true,"attributes":["static"],"comment":"/**\r\n     * \r\n     * @param {string} header \r\n     * @param {Object} d\r\n     * @param {string} [d.className] \r\n     * @param {DOMOption} [d.option] \r\n     * @param {Carrousel} [d.carrousel]\r\n     * @param {Dropdown} [d.parent]\r\n     * @param {function} [d.onClose]\r\n     * @param {function} [d.onOpen]\r\n     * @param {boolean} [d.noClose]\r\n     */","kind":"class","longname":"module:Displays.Dropdown","memberof":"module:Displays","meta":{"range":[1177,1889],"filename":"displays.js","lineno":38,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{"id":"astnode100002949","name":"exports.Dropdown","type":"MethodDefinition","paramnames":["header",""]},"vars":{"":null}},"name":"Dropdown","params":[{"type":["string"],"name":"header"},{"type":["Object"],"name":"d","properties":[{"type":["string"],"optional":true,"name":"className"},{"type":["DOMOption"],"optional":true,"name":"option"},{"type":["Carrousel"],"optional":true,"name":"carrousel"},{"type":["Dropdown"],"optional":true,"name":"parent"},{"type":["function"],"optional":true,"name":"onClose"},{"type":["function"],"optional":true,"name":"onOpen"},{"type":["boolean"],"optional":true,"name":"noClose"}]}],"members":{"function":[{"___id":"T000002R000373","___s":true,"comment":"/**\r\n     * Set the state of the Carrousel\r\n     * @param {boolean} [open] \r\n     */","description":"<p>Set the state of the Carrousel</p>","kind":"function","longname":"module:Displays.Dropdown#setState","memberof":"module:Displays.Dropdown","meta":{"range":[1987,2197],"filename":"displays.js","lineno":59,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{"id":"astnode100003070","name":"Dropdown#setState","type":"MethodDefinition","paramnames":["open"]},"vars":{"":null}},"name":"setState","params":[{"type":["boolean"],"optional":true,"name":"open","defaultvalue":true}]},{"___id":"T000002R000374","___s":true,"comment":"/**\r\n     * Toggle Carrousel\r\n     */","description":"<p>Toggle Carrousel</p>","kind":"function","longname":"module:Displays.Dropdown#toggle","memberof":"module:Displays.Dropdown","meta":{"range":[2248,2455],"filename":"displays.js","lineno":68,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{"id":"astnode100003115","name":"Dropdown#toggle","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"toggle","params":[]},{"___id":"T000002R000376","___s":true,"comment":"/**\r\n     * Change the header of the dropdown\r\n     * @param {string} header \r\n     */","description":"<p>Change the header of the dropdown</p>","kind":"function","longname":"module:Displays.Dropdown#changeTitle","memberof":"module:Displays.Dropdown","meta":{"range":[2555,2624],"filename":"displays.js","lineno":78,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{"id":"astnode100003148","name":"Dropdown#changeTitle","type":"MethodDefinition","paramnames":["header"]},"vars":{"":null}},"name":"changeTitle","params":[{"type":["string"],"name":"header"}]}]}},{"___id":"T000002R000382","___s":true,"attributes":["static"],"comment":"/**\r\n     * \r\n     * @param {Dropdown[]} dropdowns \r\n     * @param {boolean} autoClose\r\n     */","kind":"class","longname":"module:Displays.Carrousel","memberof":"module:Displays","meta":{"range":[2845,2972],"filename":"displays.js","lineno":92,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{"id":"astnode100003167","name":"exports.Carrousel","type":"MethodDefinition","paramnames":["dropdowns","autoClose"]},"vars":{"":null}},"name":"Carrousel","params":[{"type":["Array.<Dropdown>"],"name":"dropdowns"},{"type":["boolean"],"name":"autoClose","defaultvalue":true}],"members":{"function":[{"___id":"T000002R000385","___s":true,"comment":"/**\r\n     * Close all except direct line of given dropdown\r\n     * @param {Dropdown} [dropdown] Dropdown to exclude from closing, aswell as its ancestors\r\n     */","description":"<p>Close all except direct line of given dropdown</p>","kind":"function","longname":"module:Displays.Carrousel#closeAll","memberof":"module:Displays.Carrousel","meta":{"range":[3148,3503],"filename":"displays.js","lineno":101,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{"id":"astnode100003189","name":"Carrousel#closeAll","type":"MethodDefinition","paramnames":["dropdown"]},"vars":{"":null}},"name":"closeAll","params":[{"type":["Dropdown"],"optional":true,"description":"<p>Dropdown to exclude from closing, aswell as its ancestors</p>","name":"dropdown"}]},{"___id":"T000002R000391","___s":true,"comment":"/**\r\n     * \r\n     * @param {Dropdown} [dropdown] \r\n     */","kind":"function","longname":"module:Displays.Carrousel#checkAutoClose","memberof":"module:Displays.Carrousel","meta":{"range":[3701,3786],"filename":"displays.js","lineno":124,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{"id":"astnode100003256","name":"Carrousel#checkAutoClose","type":"MethodDefinition","paramnames":["dropdown"]},"vars":{"":null}},"name":"checkAutoClose","params":[{"type":["Dropdown"],"optional":true,"name":"dropdown"}]},{"___id":"T000002R000392","___s":true,"comment":"/**\r\n     * Add a dropdown to carrousel\r\n     * @param {Dropdown} dropdown \r\n     */","description":"<p>Add a dropdown to carrousel</p>","kind":"function","longname":"module:Displays.Carrousel#add","memberof":"module:Displays.Carrousel","meta":{"range":[3884,3982],"filename":"displays.js","lineno":132,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{"id":"astnode100003271","name":"Carrousel#add","type":"MethodDefinition","paramnames":["dropdown"]},"vars":{"":null}},"name":"add","params":[{"type":["Dropdown"],"name":"dropdown"}]}]}},{"___id":"T000002R000400","___s":true,"attributes":["static"],"comment":"/**\r\n     * Build a navbar to remove elements from DOM if another nav item is selected\r\n     * @param {HTMLElement} navElement \r\n     */","description":"<p>Build a navbar to remove elements from DOM if another nav item is selected</p>","kind":"class","longname":"module:Displays.NavBar","memberof":"module:Displays","meta":{"range":[4491,4562],"filename":"displays.js","lineno":157,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{"id":"astnode100003299","name":"exports.NavBar","type":"MethodDefinition","paramnames":["navElement"]},"vars":{"":null}},"name":"NavBar","params":[{"type":["HTMLElement"],"name":"navElement"}],"members":{"function":[{"___id":"T000002R000402","___s":true,"comment":"/**\r\n     * \r\n     * @param {string} name \r\n     * @param {HTMLElement} element \r\n     * @param {DOMOption} option\r\n     */","kind":"function","longname":"module:Displays.NavBar#add","memberof":"module:Displays.NavBar","meta":{"range":[4699,5016],"filename":"displays.js","lineno":167,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{"id":"astnode100003310","name":"NavBar#add","type":"MethodDefinition","paramnames":["name","element","option"]},"vars":{"":null}},"name":"add","params":[{"type":["string"],"name":"name"},{"type":["HTMLElement"],"name":"element"},{"type":["DOMOption"],"name":"option"}]},{"___id":"T000002R000409","___s":true,"comment":"/**\r\n     * \r\n     * @param {string} name \r\n     */","kind":"function","longname":"module:Displays.NavBar#open","memberof":"module:Displays.NavBar","meta":{"range":[5081,5426],"filename":"displays.js","lineno":181,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{"id":"astnode100003367","name":"NavBar#open","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"name":"open","params":[{"type":["string"],"name":"name"}]}]}}],"typedef":[{"___id":"T000002R000399","___s":true,"comment":"/**\r\n     * @typedef {Object} NavBarElement\r\n     * @prop {HTMLElement} li\r\n     * @prop {HTMLElement} element\r\n     * @prop {DOMOption} option\r\n     */","kind":"typedef","longname":"module:Displays~NavBarElement","memberof":"module:Displays","meta":{"filename":"displays.js","lineno":146,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\displays","code":{}},"name":"NavBarElement","properties":[{"type":["HTMLElement"],"name":"li"},{"type":["HTMLElement"],"name":"element"},{"type":["DOMOption"],"name":"option"}],"type":["Object"]}]}},{"___id":"T000002R000411","___s":true,"comment":"/** \r\n * A unit testing framework\r\n * @module Testing\r\n */","description":"<p>A unit testing framework</p>","kind":"module","longname":"module:Testing","meta":{"filename":"testing.js","lineno":9,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{}},"name":"Testing","members":{"class":[{"___id":"T000002R000419","___s":true,"attributes":["static"],"comment":"/**\r\n * @template {*[]} Input The type of the input paramaters, expressed as an array\r\n * @template {*} Actual The type of the output of the callback\r\n * @class\r\n */","description":"<p>Set up a test</p>","kind":"class","longname":"module:Testing.Test","memberof":"module:Testing","meta":{"range":[564,10585],"filename":"testing.js","lineno":19,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100003468","name":"exports.Test","type":"ClassDeclaration"}},"name":"Test","params":[{"type":["TestCallback"],"description":"<p>Callback to test</p>","name":"callback"},{"type":["boolean"],"description":"<p>Run tests in parallel or sequentially</p>","name":"parallelize","defaultvalue":false}],"members":{"function":[{"___id":"T000002R000422","___s":true,"comment":"/**\r\n     * @returns {function} Function from which to extract name and parameters\r\n     */","kind":"function","longname":"module:Testing.Test#getActualCallback","memberof":"module:Testing.Test","meta":{"range":[1195,1254],"filename":"testing.js","lineno":38,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100003497","name":"Test#getActualCallback","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"getActualCallback","params":[],"returns":{"type":["function"],"description":"<p>Function from which to extract name and parameters</p>"}},{"___id":"T000002R000423","___s":true,"comment":"/**\r\n     * \r\n     * @returns {number}\r\n     */","kind":"function","longname":"module:Testing.Test#countSuccess","memberof":"module:Testing.Test","meta":{"range":[1317,1483],"filename":"testing.js","lineno":47,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100003505","name":"Test#countSuccess","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"countSuccess","params":[],"returns":{"type":["number"]}},{"___id":"T000002R000429","___s":true,"attributes":["async"],"comment":"/**\r\n     * Run a test against the set callback\r\n     * @template {*} Expected The type of the expected value\r\n     * @param {TestCase<Input,Expected>} check\r\n     * @param {Checker<Input,Actual,Expected>} checkFunction Checker of actual result\r\n     * @param {boolean} [expectException] Wether the callback should throw error on the given inputs\r\n     * @param {number} [index] Index of the test if run with others\r\n     * @return {Promise<string | null>} Error message resulting from checking the test case, or null if test succeeded\r\n     */","description":"<p>Run a test against the set callback</p>","kind":"function","longname":"module:Testing.Test#runTest","memberof":"module:Testing.Test","meta":{"range":[3936,4476],"filename":"testing.js","lineno":105,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100003530","name":"Test#runTest","type":"MethodDefinition","paramnames":["","checkFunction","expectException","index"]},"vars":{"":null}},"name":"runTest","params":[{"type":["TestCase.<Input, Expected>"],"name":"check"},{"type":["Checker.<Input, Actual, Expected>"],"description":"<p>Checker of actual result</p>","name":"checkFunction"},{"type":["boolean"],"optional":true,"description":"<p>Wether the callback should throw error on the given inputs</p>","name":"expectException"},{"type":["number"],"optional":true,"description":"<p>Index of the test if run with others</p>","name":"index"}],"returns":{"type":["Promise.<(string|null)>"],"description":"<p>Error message resulting from checking the test case, or null if test succeeded</p>"},"templates":[{"name":"Expected","type":["*"],"description":"The type of the expected value"}]},{"___id":"T000002R000433","___s":true,"attributes":["async"],"comment":"/**\r\n     * Run multiple tests against the callback\r\n     * @template {*} Expected The type of the expected value\r\n     * @param {Array<TestCase<Input,Expected>>} cases Test Cases to run against check\r\n     * @param {Checker<Input, Actual,Expected>} checkFunction Checker of actual result\r\n     * @param {boolean} [expectException] Wether the callback should throw error on the given inputs\r\n     * @param {Ider<Input>} [ider] Function to id test cases using their inputs if no id is given.\r\n     * @return {Promise<Array<string | null>>} Error messages from each test case, or null for succesful tests\r\n     */","description":"<p>Run multiple tests against the callback</p>","kind":"function","longname":"module:Testing.Test#runTests","memberof":"module:Testing.Test","meta":{"range":[5101,5753],"filename":"testing.js","lineno":127,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100003590","name":"Test#runTests","type":"MethodDefinition","paramnames":["cases","checkFunction","expectException","ider"]},"vars":{"":null}},"name":"runTests","params":[{"type":["Array.<TestCase.<Input, Expected>>"],"description":"<p>Test Cases to run against check</p>","name":"cases"},{"type":["Checker.<Input, Actual, Expected>"],"description":"<p>Checker of actual result</p>","name":"checkFunction"},{"type":["boolean"],"optional":true,"description":"<p>Wether the callback should throw error on the given inputs</p>","name":"expectException","defaultvalue":false},{"type":["Ider.<Input>"],"optional":true,"description":"<p>Function to id test cases using their inputs if no id is given.</p>","name":"ider"}],"returns":{"type":["Promise.<Array.<(string|null)>>"],"description":"<p>Error messages from each test case, or null for succesful tests</p>"},"templates":[{"name":"Expected","type":["*"],"description":"The type of the expected value"}]},{"___id":"T000002R000442","___s":true,"attributes":["static"],"comment":"/**\r\n     * Checks that actual and expected are equal using the === operator\r\n     * @template {*} T\r\n     * @type {Checker<any, T,T>}\r\n     */","description":"<p>Checks that actual and expected are equal using the === operator</p>","kind":"function","longname":"module:Testing.Test.isEqual","memberof":"module:Testing.Test","meta":{"range":[6151,6296],"filename":"testing.js","lineno":153,"columnno":5,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100003695","name":"Test.isEqual","type":"MethodDefinition","paramnames":["actual","expected"]},"vars":{"":null}},"name":"isEqual","params":[],"type":["Checker.<any, T, T>"],"templates":[{"name":"T","type":["*"]}]},{"___id":"T000002R000443","___s":true,"attributes":["static"],"comment":"/**\r\n     * Check that objects are deeply equal\r\n     * @type {Checker<*,Object.<string,*>, Object.<string,*>>}\r\n     */","description":"<p>Check that objects are deeply equal</p>","kind":"function","longname":"module:Testing.Test.isDeepEqual","memberof":"module:Testing.Test","meta":{"range":[6438,7047],"filename":"testing.js","lineno":164,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100003714","name":"Test.isDeepEqual","type":"MethodDefinition","paramnames":["actual","expected"]},"vars":{"":null}},"name":"isDeepEqual","params":[],"type":["Checker.<*, Object.<string, *>, Object.<string, *>>"]},{"___id":"T000002R000447","___s":true,"attributes":["static"],"comment":"/**\r\n     * Check that two arrays are equal in any order\r\n     * @template {*} T\r\n     * @type {Checker<*, Array<T>, Array<T>>}\r\n     */","description":"<p>Check that two arrays are equal in any order</p>","kind":"function","longname":"module:Testing.Test.isEqualDisordered","memberof":"module:Testing.Test","meta":{"range":[7197,7742],"filename":"testing.js","lineno":181,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100003794","name":"Test.isEqualDisordered","type":"MethodDefinition","paramnames":["actual","expected"]},"vars":{"":null}},"name":"isEqualDisordered","params":[],"type":["Checker.<*, Array.<T>, Array.<T>>"],"templates":[{"name":"T","type":["*"]}]},{"___id":"T000002R000452","___s":true,"attributes":["static"],"comment":"/**\r\n     * Just pass\r\n     * @type {Checker<*, *, *>}\r\n     */","description":"<p>Just pass</p>","kind":"function","longname":"module:Testing.Test.pass","memberof":"module:Testing.Test","meta":{"range":[7819,7863],"filename":"testing.js","lineno":201,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100003870","name":"Test.pass","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"pass","params":[],"type":["Checker.<*, *, *>"]},{"___id":"T000002R000456","___s":true,"comment":"/**\r\n     * Get the callback parameter names\r\n     * @returns {string[]}\r\n     */","description":"<p>Get the callback parameter names</p>","kind":"function","longname":"module:Testing.Test#getParamNames","memberof":"module:Testing.Test","meta":{"range":[8346,8758],"filename":"testing.js","lineno":217,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100003882","name":"Test#getParamNames","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"getParamNames","params":[],"returns":{"type":["Array.<string>"]}},{"___id":"T000002R000461","___s":true,"comment":"/**\r\n     * Create a display for the given error messages\r\n     * @template {*} Expected The type of the expected value\r\n     * @param {Array<TestCase<Input,Expected>>} cases Test Cases run to get the errors\r\n     * @param {string} [title] Title of the display\r\n     * @param {HTMLElement} [parent] Container of the display\r\n     * @return {Dropdown} The dropdown display\r\n     */","description":"<p>Create a display for the given error messages</p>","kind":"function","longname":"module:Testing.Test#displayCases","memberof":"module:Testing.Test","meta":{"range":[9152,9817],"filename":"testing.js","lineno":235,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100003963","name":"Test#displayCases","type":"MethodDefinition","paramnames":["cases","title","parent"]},"vars":{"":null}},"name":"displayCases","params":[{"type":["Array.<TestCase.<Input, Expected>>"],"description":"<p>Test Cases run to get the errors</p>","name":"cases"},{"type":["string"],"optional":true,"description":"<p>Title of the display</p>","name":"title"},{"type":["HTMLElement"],"optional":true,"description":"<p>Container of the display</p>","name":"parent"}],"returns":{"type":["Dropdown"],"description":"<p>The dropdown display</p>"},"templates":[{"name":"Expected","type":["*"],"description":"The type of the expected value"}]},{"___id":"T000002R000466","___s":true,"comment":"/**\r\n     * Display given error inside the given container\r\n     * @template {*} Expected The type of the expected value\r\n     * @param {TestCase<Input,Expected>} testCase Test identifier \r\n     */","description":"<p>Display given error inside the given container</p>","kind":"function","longname":"module:Testing.Test#buildCaseDisplay","memberof":"module:Testing.Test","meta":{"range":[10032,10580],"filename":"testing.js","lineno":259,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100004066","name":"Test#buildCaseDisplay","type":"MethodDefinition","paramnames":["testCase"]},"vars":{"":null}},"name":"buildCaseDisplay","params":[{"type":["TestCase.<Input, Expected>"],"description":"<p>Test identifier</p>","name":"testCase"}],"templates":[{"name":"Expected","type":["*"],"description":"The type of the expected value"}]}]},"templates":[{"name":"Input","type":["*[]"],"description":"The type of the input paramaters, expressed as an array<br>"},{"name":"Actual","type":["*"],"description":"The type of the output of the callback<br>"}]},{"___id":"T000002R000479","___s":true,"attributes":["static"],"augments":["Test"],"classdesc":"<p>Test for a class</p>","comment":"/**\r\n * Test for a class\r\n * @template {*[]} Input The type of the input paramaters, expressed as an array\r\n * @template {*} Actual The type of the output of the callback\r\n * @extends {Test}\r\n */","description":"<p>Set up a test for a class</p>","kind":"class","longname":"module:Testing.ClassTest","memberof":"module:Testing","meta":{"range":[10788,18032],"filename":"testing.js","lineno":279,"columnno":0,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100004147","name":"exports.ClassTest","type":"ClassDeclaration"}},"name":"ClassTest","params":[{"type":["function"],"description":"<p>Class to test</p>","name":"Constructor"},{"type":["boolean"],"optional":true,"description":"<p>Run tests in parallel or sequentially</p>","name":"parallelize","defaultvalue":false}],"members":{"function":[{"___id":"T000002R000481","___s":true,"comment":"/**\r\n     * @overrides\r\n     * @returns {function}\r\n     */","kind":"function","longname":"module:Testing.ClassTest#getActualCallback","memberof":"module:Testing.ClassTest","meta":{"range":[11525,11587],"filename":"testing.js","lineno":308,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100004183","name":"ClassTest#getActualCallback","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"getActualCallback","params":[],"returns":{"type":["function"]},"tags":[{"originalTitle":"overrides","title":"overrides","text":""}]},{"___id":"T000002R000482","___s":true,"attributes":["async"],"comment":"/**\r\n     * Run multiple test cases agaisnt the class\r\n     * @overrides\r\n     * @template {*} Expected The type of the expected value\r\n     * @param {Array<TestCase<Input,Expected>>} cases Test Cases to run against check\r\n     * @param {Checker<Input, Actual,Expected>} checkFunction Checker of actual result\r\n     * @param {boolean} [expectException] Wether the callback should throw error on the given inputs\r\n     * @param {Ider<Input>} [ider] Function to id checks using their inputs if no id.\r\n     * @return {Promise<Array<string | null>>}\r\n     */","description":"<p>Run multiple test cases agaisnt the class</p>","kind":"function","longname":"module:Testing.ClassTest#runTests","memberof":"module:Testing.ClassTest","meta":{"range":[12159,12596],"filename":"testing.js","lineno":323,"columnno":5,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100004191","name":"ClassTest#runTests","type":"MethodDefinition","paramnames":["cases","checkFunction","expectException","ider"]},"vars":{"":null}},"name":"runTests","params":[{"type":["Array.<TestCase.<Input, Expected>>"],"description":"<p>Test Cases to run against check</p>","name":"cases"},{"type":["Checker.<Input, Actual, Expected>"],"description":"<p>Checker of actual result</p>","name":"checkFunction"},{"type":["boolean"],"optional":true,"description":"<p>Wether the callback should throw error on the given inputs</p>","name":"expectException","defaultvalue":false},{"type":["Ider.<Input>"],"optional":true,"description":"<p>Function to id checks using their inputs if no id.</p>","name":"ider"}],"returns":{"type":["Promise.<Array.<(string|null)>>"]},"tags":[{"originalTitle":"overrides","title":"overrides","text":""}],"templates":[{"name":"Expected","type":["*"],"description":"The type of the expected value"}]},{"___id":"T000002R000486","___s":true,"attributes":["async"],"comment":"/**\r\n     * Run multiple tests against the callback and generate\r\n     * @overrides\r\n     * @template {*[]} FunctionInput The type of functions the input paramaters, expressed as an array\r\n     * @template {*} FunctionActual The type of the output of the function\r\n     * @template {*} FunctionExpected The type of the expected value for the checker\r\n     * @param {string} name The name of the function\r\n     * @param {Object[]} checks\r\n     * @param {FunctionInput} checks[].input Inputs of test\r\n     * @param {FunctionExpected[]} checks[].expecteds Expected outputs of test\r\n     * @param {Checker<FunctionInput, FunctionActual, FunctionExpected,Actual>} checkFunction Checker of actual result\r\n     * @param {boolean} [expectException] Wether the callback should throw error on the given inputs\r\n     * @param {boolean} [parallelize] Parallelize the tests or run sequentially\r\n     * @return {Promise<Array<Array<string | null>>>}\r\n     */","description":"<p>Run multiple tests against the callback and generate</p>","kind":"function","longname":"module:Testing.ClassTest#runInstanceTests","memberof":"module:Testing.ClassTest","meta":{"range":[13554,14600],"filename":"testing.js","lineno":348,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100004257","name":"ClassTest#runInstanceTests","type":"MethodDefinition","paramnames":["name","checks","checkFunction","expectException","parallelize"]},"vars":{"":null}},"name":"runInstanceTests","params":[{"type":["string"],"description":"<p>The name of the function</p>","name":"name"},{"type":["Array.<Object>"],"name":"checks","properties":[{"type":["FunctionInput"],"description":"<p>Inputs of test</p>","name":"input"},{"type":["Array.<FunctionExpected>"],"description":"<p>Expected outputs of test</p>","name":"expecteds"}]},{"type":["Checker.<FunctionInput, FunctionActual, FunctionExpected, Actual>"],"description":"<p>Checker of actual result</p>","name":"checkFunction"},{"type":["boolean"],"optional":true,"description":"<p>Wether the callback should throw error on the given inputs</p>","name":"expectException"},{"type":["boolean"],"optional":true,"description":"<p>Parallelize the tests or run sequentially</p>","name":"parallelize"}],"returns":{"type":["Promise.<Array.<Array.<(string|null)>>>"]},"tags":[{"originalTitle":"overrides","title":"overrides","text":""}],"templates":[{"name":"FunctionInput","type":["*[]"],"description":"The type of functions the input paramaters, expressed as an array"},{"name":"FunctionActual","type":["*"],"description":"The type of the output of the function"},{"name":"FunctionExpected","type":["*"],"description":"The type of the expected value for the checker"}]},{"___id":"T000002R000499","___s":true,"comment":"/**\r\n     * Create a display for the given error messages\r\n     * @template {*} Expected The type of the expected value\r\n     * @param {Array<TestCase<Input,Expected>>} cases Test Cases run to get the errors\r\n     * @param {string} [title] Title of the display\r\n     * @param {HTMLElement} [parent] Container of the display\r\n     * @return {Dropdown} The dropdown display\r\n     */","description":"<p>Create a display for the given error messages</p>","kind":"function","longname":"module:Testing.ClassTest#displayErrors","memberof":"module:Testing.ClassTest","meta":{"range":[15283,17370],"filename":"testing.js","lineno":384,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100004404","name":"ClassTest#displayErrors","type":"MethodDefinition","paramnames":["cases","title","parent"]},"vars":{"":null}},"name":"displayErrors","params":[{"type":["Array.<TestCase.<Input, Expected>>"],"description":"<p>Test Cases run to get the errors</p>","name":"cases"},{"type":["string"],"optional":true,"description":"<p>Title of the display</p>","name":"title"},{"type":["HTMLElement"],"optional":true,"description":"<p>Container of the display</p>","name":"parent"}],"returns":{"type":["Dropdown"],"description":"<p>The dropdown display</p>"},"templates":[{"name":"Expected","type":["*"],"description":"The type of the expected value"}]},{"___id":"T000002R000516","___s":true,"comment":"/**\r\n     * Add a function test to the display\r\n     * @param {string} name \r\n     * @param {number} successes \r\n     * @param {number} total \r\n     * @param {HTMLElement} element\r\n     * @param {DOMOption} appendToContent\r\n     * @returns {boolean} Passed all\r\n     */","description":"<p>Add a function test to the display</p>","kind":"function","longname":"module:Testing.ClassTest#addFunctionDisplay","memberof":"module:Testing.ClassTest","meta":{"range":[17653,18023],"filename":"testing.js","lineno":437,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{"id":"astnode100004704","name":"ClassTest#addFunctionDisplay","type":"MethodDefinition","paramnames":["name","successes","total","element","appendToContent"]},"vars":{"":null}},"name":"addFunctionDisplay","params":[{"type":["string"],"name":"name"},{"type":["number"],"name":"successes"},{"type":["number"],"name":"total"},{"type":["HTMLElement"],"name":"element"},{"type":["DOMOption"],"name":"appendToContent"}],"returns":{"type":["boolean"],"description":"<p>Passed all</p>"}}]},"templates":[{"name":"Input","type":["*[]"],"description":"The type of the input paramaters, expressed as an array<br>"},{"name":"Actual","type":["*"],"description":"The type of the output of the callback<br>"}]}],"typedef":[{"___id":"T000002R000425","___s":true,"comment":"/**\r\n     * @typedef {Function} TestCallback Callback to test\r\n     */","description":"<p>Callback to test</p>","kind":"typedef","longname":"module:Testing~TestCallback","memberof":"module:Testing","meta":{"filename":"testing.js","lineno":58,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{}},"name":"TestCallback","type":["function"]},{"___id":"T000002R000426","___s":true,"comment":"/**\r\n     * @template {*[]} Input The type of the input paramaters, expressed as an array\r\n     * @template {*} Actual The type of the output of the callback\r\n     * @template {*} Expected The type of the expected value\r\n     * @template {*} [This=unknown]\r\n     * @this This\r\n     * @callback Checker A function to compare the actual output of a callback against the given expected\r\n     * @param {Actual} actual The actual ouput of the callback\r\n     * @param {Expected} expected The expected value to compare against\r\n     * @param {Input} input The input used to obtain 'actual'\r\n     * @param {number} [index] The index of a testcase if run with multiple\r\n     * @return {string | null | Promise<string | null>}\r\n     */","kind":"typedef","longname":"module:Testing~Checker","memberof":"module:Testing","meta":{"filename":"testing.js","lineno":62,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{}},"name":"Checker","params":[{"type":["Actual"],"description":"<p>The actual ouput of the callback</p>","name":"actual"},{"type":["Expected"],"description":"<p>The expected value to compare against</p>","name":"expected"},{"type":["Input"],"description":"<p>The input used to obtain 'actual'</p>","name":"input"},{"type":["number"],"optional":true,"description":"<p>The index of a testcase if run with multiple</p>","name":"index"}],"returns":{"type":["string","null","Promise.<(string|null)>"]},"this":"This","type":["function"],"templates":[{"name":"Input","type":["*[]"],"description":"The type of the input paramaters, expressed as an array"},{"name":"Actual","type":["*"],"description":"The type of the output of the callback"},{"name":"Expected","type":["*"],"description":"The type of the expected value"},{"name":"This","type":["*"],"optional":true,"defaultvalue":"unknown"}]},{"___id":"T000002R000427","___s":true,"comment":"/**\r\n     * @template {*[]} Input The type of the input paramaters, expressed as an array\r\n     * @template {*} Expected The type of the expected value\r\n     * @typedef {Object} TestCase\r\n     * @property {Input} input Input parameters as an array\r\n     * @property {Expected} expected Expected value for checker function\r\n     * @property {string} [id] Id of testcase\r\n     * @property {string | null} [errorMessage] Error message resulting from checking the test case, or null if test succeeded\r\n     */","kind":"typedef","longname":"module:Testing~TestCase","memberof":"module:Testing","meta":{"filename":"testing.js","lineno":76,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{}},"name":"TestCase","properties":[{"type":["Input"],"description":"<p>Input parameters as an array</p>","name":"input"},{"type":["Expected"],"description":"<p>Expected value for checker function</p>","name":"expected"},{"type":["string"],"optional":true,"description":"<p>Id of testcase</p>","name":"id"},{"type":["string","null"],"optional":true,"description":"<p>Error message resulting from checking the test case, or null if test succeeded</p>","name":"errorMessage"}],"type":["Object"],"templates":[{"name":"Input","type":["*[]"],"description":"The type of the input paramaters, expressed as an array"},{"name":"Expected","type":["*"],"description":"The type of the expected value"}]},{"___id":"T000002R000428","___s":true,"comment":"/**\r\n     * @template {*[]} Input\r\n     * @callback Ider\r\n     * @param {Input} input\r\n     */","kind":"typedef","longname":"module:Testing~Ider","memberof":"module:Testing","meta":{"filename":"testing.js","lineno":86,"columnno":4,"path":"C:\\Users\\gianf\\github\\EasyJS\\addOns\\testing","code":{}},"name":"Ider","params":[{"type":["Input"],"name":"input"}],"type":["function"],"templates":[{"name":"Input","type":["*[]"]}]}]}}]}